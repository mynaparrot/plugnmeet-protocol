// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: plugnmeet_create_room.proto

package plugnmeet

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRoomReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoomId          string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	EmptyTimeout    *uint32                `protobuf:"varint,2,opt,name=empty_timeout,json=emptyTimeout,proto3,oneof" json:"empty_timeout,omitempty"`
	MaxParticipants *uint32                `protobuf:"varint,3,opt,name=max_participants,json=maxParticipants,proto3,oneof" json:"max_participants,omitempty"`
	Metadata        *RoomMetadata          `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoomReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CreateRoomReq) GetEmptyTimeout() uint32 {
	if x != nil && x.EmptyTimeout != nil {
		return *x.EmptyTimeout
	}
	return 0
}

func (x *CreateRoomReq) GetMaxParticipants() uint32 {
	if x != nil && x.MaxParticipants != nil {
		return *x.MaxParticipants
	}
	return 0
}

func (x *CreateRoomReq) GetMetadata() *RoomMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RoomMetadata struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RoomTitle           string                 `protobuf:"bytes,1,opt,name=room_title,json=roomTitle,proto3" json:"room_title,omitempty"`
	WelcomeMessage      *string                `protobuf:"bytes,2,opt,name=welcome_message,json=welcomeMessage,proto3,oneof" json:"welcome_message,omitempty"`
	IsRecording         bool                   `protobuf:"varint,3,opt,name=is_recording,json=isRecording,proto3" json:"is_recording,omitempty"`
	IsActiveRtmp        bool                   `protobuf:"varint,4,opt,name=is_active_rtmp,json=isActiveRtmp,proto3" json:"is_active_rtmp,omitempty"`
	ParentRoomId        string                 `protobuf:"bytes,5,opt,name=parent_room_id,json=parentRoomId,proto3" json:"parent_room_id,omitempty"`
	IsBreakoutRoom      bool                   `protobuf:"varint,6,opt,name=is_breakout_room,json=isBreakoutRoom,proto3" json:"is_breakout_room,omitempty"`
	WebhookUrl          *string                `protobuf:"bytes,7,opt,name=webhook_url,json=webhookUrl,proto3,oneof" json:"webhook_url,omitempty"`
	StartedAt           uint64                 `protobuf:"varint,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	LogoutUrl           *string                `protobuf:"bytes,9,opt,name=logout_url,json=logoutUrl,proto3,oneof" json:"logout_url,omitempty"`
	RoomFeatures        *RoomCreateFeatures    `protobuf:"bytes,10,opt,name=room_features,json=roomFeatures,proto3" json:"room_features,omitempty"`
	DefaultLockSettings *LockSettings          `protobuf:"bytes,11,opt,name=default_lock_settings,json=defaultLockSettings,proto3" json:"default_lock_settings,omitempty"`
	CopyrightConf       *CopyrightConf         `protobuf:"bytes,12,opt,name=copyright_conf,json=copyrightConf,proto3" json:"copyright_conf,omitempty"`
	// we'll use this as version control
	MetadataId    *string `protobuf:"bytes,13,opt,name=metadata_id,json=metadataId,proto3,oneof" json:"metadata_id,omitempty"`
	ExtraData     *string `protobuf:"bytes,14,opt,name=extra_data,json=extraData,proto3,oneof" json:"extra_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomMetadata) Reset() {
	*x = RoomMetadata{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMetadata) ProtoMessage() {}

func (x *RoomMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMetadata.ProtoReflect.Descriptor instead.
func (*RoomMetadata) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{1}
}

func (x *RoomMetadata) GetRoomTitle() string {
	if x != nil {
		return x.RoomTitle
	}
	return ""
}

func (x *RoomMetadata) GetWelcomeMessage() string {
	if x != nil && x.WelcomeMessage != nil {
		return *x.WelcomeMessage
	}
	return ""
}

func (x *RoomMetadata) GetIsRecording() bool {
	if x != nil {
		return x.IsRecording
	}
	return false
}

func (x *RoomMetadata) GetIsActiveRtmp() bool {
	if x != nil {
		return x.IsActiveRtmp
	}
	return false
}

func (x *RoomMetadata) GetParentRoomId() string {
	if x != nil {
		return x.ParentRoomId
	}
	return ""
}

func (x *RoomMetadata) GetIsBreakoutRoom() bool {
	if x != nil {
		return x.IsBreakoutRoom
	}
	return false
}

func (x *RoomMetadata) GetWebhookUrl() string {
	if x != nil && x.WebhookUrl != nil {
		return *x.WebhookUrl
	}
	return ""
}

func (x *RoomMetadata) GetStartedAt() uint64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *RoomMetadata) GetLogoutUrl() string {
	if x != nil && x.LogoutUrl != nil {
		return *x.LogoutUrl
	}
	return ""
}

func (x *RoomMetadata) GetRoomFeatures() *RoomCreateFeatures {
	if x != nil {
		return x.RoomFeatures
	}
	return nil
}

func (x *RoomMetadata) GetDefaultLockSettings() *LockSettings {
	if x != nil {
		return x.DefaultLockSettings
	}
	return nil
}

func (x *RoomMetadata) GetCopyrightConf() *CopyrightConf {
	if x != nil {
		return x.CopyrightConf
	}
	return nil
}

func (x *RoomMetadata) GetMetadataId() string {
	if x != nil && x.MetadataId != nil {
		return *x.MetadataId
	}
	return ""
}

func (x *RoomMetadata) GetExtraData() string {
	if x != nil && x.ExtraData != nil {
		return *x.ExtraData
	}
	return ""
}

type RoomCreateFeatures struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	AllowWebcams            bool                   `protobuf:"varint,1,opt,name=allow_webcams,json=allowWebcams,proto3" json:"allow_webcams,omitempty"`
	MuteOnStart             bool                   `protobuf:"varint,2,opt,name=mute_on_start,json=muteOnStart,proto3" json:"mute_on_start,omitempty"`
	AllowScreenShare        bool                   `protobuf:"varint,3,opt,name=allow_screen_share,json=allowScreenShare,proto3" json:"allow_screen_share,omitempty"`
	AllowRtmp               bool                   `protobuf:"varint,4,opt,name=allow_rtmp,json=allowRtmp,proto3" json:"allow_rtmp,omitempty"`
	AllowViewOtherWebcams   bool                   `protobuf:"varint,5,opt,name=allow_view_other_webcams,json=allowViewOtherWebcams,proto3" json:"allow_view_other_webcams,omitempty"`
	AllowViewOtherUsersList bool                   `protobuf:"varint,6,opt,name=allow_view_other_users_list,json=allowViewOtherUsersList,proto3" json:"allow_view_other_users_list,omitempty"`
	AdminOnlyWebcams        bool                   `protobuf:"varint,7,opt,name=admin_only_webcams,json=adminOnlyWebcams,proto3" json:"admin_only_webcams,omitempty"`
	// Deprecated: Marked as deprecated in plugnmeet_create_room.proto.
	AllowPolls                      bool                             `protobuf:"varint,8,opt,name=allow_polls,json=allowPolls,proto3" json:"allow_polls,omitempty"`
	RoomDuration                    *uint64                          `protobuf:"varint,9,opt,name=room_duration,json=roomDuration,proto3,oneof" json:"room_duration,omitempty"`
	EnableAnalytics                 bool                             `protobuf:"varint,10,opt,name=enable_analytics,json=enableAnalytics,proto3" json:"enable_analytics,omitempty"`
	AllowVirtualBg                  *bool                            `protobuf:"varint,11,opt,name=allow_virtual_bg,json=allowVirtualBg,proto3,oneof" json:"allow_virtual_bg,omitempty"`
	AllowRaiseHand                  *bool                            `protobuf:"varint,12,opt,name=allow_raise_hand,json=allowRaiseHand,proto3,oneof" json:"allow_raise_hand,omitempty"`
	AutoGenUserId                   *bool                            `protobuf:"varint,13,opt,name=auto_gen_user_id,json=autoGenUserId,proto3,oneof" json:"auto_gen_user_id,omitempty"`
	RecordingFeatures               *RecordingFeatures               `protobuf:"bytes,14,opt,name=recording_features,json=recordingFeatures,proto3" json:"recording_features,omitempty"`
	ChatFeatures                    *ChatFeatures                    `protobuf:"bytes,15,opt,name=chat_features,json=chatFeatures,proto3" json:"chat_features,omitempty"`
	SharedNotePadFeatures           *SharedNotePadFeatures           `protobuf:"bytes,16,opt,name=shared_note_pad_features,json=sharedNotePadFeatures,proto3" json:"shared_note_pad_features,omitempty"`
	WhiteboardFeatures              *WhiteboardFeatures              `protobuf:"bytes,17,opt,name=whiteboard_features,json=whiteboardFeatures,proto3" json:"whiteboard_features,omitempty"`
	ExternalMediaPlayerFeatures     *ExternalMediaPlayerFeatures     `protobuf:"bytes,18,opt,name=external_media_player_features,json=externalMediaPlayerFeatures,proto3" json:"external_media_player_features,omitempty"`
	WaitingRoomFeatures             *WaitingRoomFeatures             `protobuf:"bytes,19,opt,name=waiting_room_features,json=waitingRoomFeatures,proto3" json:"waiting_room_features,omitempty"`
	BreakoutRoomFeatures            *BreakoutRoomFeatures            `protobuf:"bytes,20,opt,name=breakout_room_features,json=breakoutRoomFeatures,proto3" json:"breakout_room_features,omitempty"`
	DisplayExternalLinkFeatures     *DisplayExternalLinkFeatures     `protobuf:"bytes,21,opt,name=display_external_link_features,json=displayExternalLinkFeatures,proto3" json:"display_external_link_features,omitempty"`
	IngressFeatures                 *IngressFeatures                 `protobuf:"bytes,22,opt,name=ingress_features,json=ingressFeatures,proto3" json:"ingress_features,omitempty"`
	SpeechToTextTranslationFeatures *SpeechToTextTranslationFeatures `protobuf:"bytes,23,opt,name=speech_to_text_translation_features,json=speechToTextTranslationFeatures,proto3" json:"speech_to_text_translation_features,omitempty"`
	EndToEndEncryptionFeatures      *EndToEndEncryptionFeatures      `protobuf:"bytes,24,opt,name=end_to_end_encryption_features,json=endToEndEncryptionFeatures,proto3" json:"end_to_end_encryption_features,omitempty"`
	PollsFeatures                   *PollsFeatures                   `protobuf:"bytes,25,opt,name=polls_features,json=pollsFeatures,proto3" json:"polls_features,omitempty"` // next ID: 26
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *RoomCreateFeatures) Reset() {
	*x = RoomCreateFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomCreateFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCreateFeatures) ProtoMessage() {}

func (x *RoomCreateFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCreateFeatures.ProtoReflect.Descriptor instead.
func (*RoomCreateFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{2}
}

func (x *RoomCreateFeatures) GetAllowWebcams() bool {
	if x != nil {
		return x.AllowWebcams
	}
	return false
}

func (x *RoomCreateFeatures) GetMuteOnStart() bool {
	if x != nil {
		return x.MuteOnStart
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowScreenShare() bool {
	if x != nil {
		return x.AllowScreenShare
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowRtmp() bool {
	if x != nil {
		return x.AllowRtmp
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowViewOtherWebcams() bool {
	if x != nil {
		return x.AllowViewOtherWebcams
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowViewOtherUsersList() bool {
	if x != nil {
		return x.AllowViewOtherUsersList
	}
	return false
}

func (x *RoomCreateFeatures) GetAdminOnlyWebcams() bool {
	if x != nil {
		return x.AdminOnlyWebcams
	}
	return false
}

// Deprecated: Marked as deprecated in plugnmeet_create_room.proto.
func (x *RoomCreateFeatures) GetAllowPolls() bool {
	if x != nil {
		return x.AllowPolls
	}
	return false
}

func (x *RoomCreateFeatures) GetRoomDuration() uint64 {
	if x != nil && x.RoomDuration != nil {
		return *x.RoomDuration
	}
	return 0
}

func (x *RoomCreateFeatures) GetEnableAnalytics() bool {
	if x != nil {
		return x.EnableAnalytics
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowVirtualBg() bool {
	if x != nil && x.AllowVirtualBg != nil {
		return *x.AllowVirtualBg
	}
	return false
}

func (x *RoomCreateFeatures) GetAllowRaiseHand() bool {
	if x != nil && x.AllowRaiseHand != nil {
		return *x.AllowRaiseHand
	}
	return false
}

func (x *RoomCreateFeatures) GetAutoGenUserId() bool {
	if x != nil && x.AutoGenUserId != nil {
		return *x.AutoGenUserId
	}
	return false
}

func (x *RoomCreateFeatures) GetRecordingFeatures() *RecordingFeatures {
	if x != nil {
		return x.RecordingFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetChatFeatures() *ChatFeatures {
	if x != nil {
		return x.ChatFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetSharedNotePadFeatures() *SharedNotePadFeatures {
	if x != nil {
		return x.SharedNotePadFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetWhiteboardFeatures() *WhiteboardFeatures {
	if x != nil {
		return x.WhiteboardFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetExternalMediaPlayerFeatures() *ExternalMediaPlayerFeatures {
	if x != nil {
		return x.ExternalMediaPlayerFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetWaitingRoomFeatures() *WaitingRoomFeatures {
	if x != nil {
		return x.WaitingRoomFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetBreakoutRoomFeatures() *BreakoutRoomFeatures {
	if x != nil {
		return x.BreakoutRoomFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetDisplayExternalLinkFeatures() *DisplayExternalLinkFeatures {
	if x != nil {
		return x.DisplayExternalLinkFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetIngressFeatures() *IngressFeatures {
	if x != nil {
		return x.IngressFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetSpeechToTextTranslationFeatures() *SpeechToTextTranslationFeatures {
	if x != nil {
		return x.SpeechToTextTranslationFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetEndToEndEncryptionFeatures() *EndToEndEncryptionFeatures {
	if x != nil {
		return x.EndToEndEncryptionFeatures
	}
	return nil
}

func (x *RoomCreateFeatures) GetPollsFeatures() *PollsFeatures {
	if x != nil {
		return x.PollsFeatures
	}
	return nil
}

type ChatFeatures struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AllowChat        bool                   `protobuf:"varint,1,opt,name=allow_chat,json=allowChat,proto3" json:"allow_chat,omitempty"`
	AllowFileUpload  bool                   `protobuf:"varint,2,opt,name=allow_file_upload,json=allowFileUpload,proto3" json:"allow_file_upload,omitempty"`
	AllowedFileTypes []string               `protobuf:"bytes,3,rep,name=allowed_file_types,json=allowedFileTypes,proto3" json:"allowed_file_types,omitempty"`
	MaxFileSize      *uint64                `protobuf:"varint,4,opt,name=max_file_size,json=maxFileSize,proto3,oneof" json:"max_file_size,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChatFeatures) Reset() {
	*x = ChatFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFeatures) ProtoMessage() {}

func (x *ChatFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFeatures.ProtoReflect.Descriptor instead.
func (*ChatFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{3}
}

func (x *ChatFeatures) GetAllowChat() bool {
	if x != nil {
		return x.AllowChat
	}
	return false
}

func (x *ChatFeatures) GetAllowFileUpload() bool {
	if x != nil {
		return x.AllowFileUpload
	}
	return false
}

func (x *ChatFeatures) GetAllowedFileTypes() []string {
	if x != nil {
		return x.AllowedFileTypes
	}
	return nil
}

func (x *ChatFeatures) GetMaxFileSize() uint64 {
	if x != nil && x.MaxFileSize != nil {
		return *x.MaxFileSize
	}
	return 0
}

type SharedNotePadFeatures struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AllowedSharedNotePad bool                   `protobuf:"varint,1,opt,name=allowed_shared_note_pad,json=allowedSharedNotePad,proto3" json:"allowed_shared_note_pad,omitempty"`
	IsActive             bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Visible              bool                   `protobuf:"varint,3,opt,name=visible,proto3" json:"visible,omitempty"`
	NodeId               string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Host                 string                 `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	NotePadId            string                 `protobuf:"bytes,6,opt,name=note_pad_id,json=notePadId,proto3" json:"note_pad_id,omitempty"`
	ReadOnlyPadId        string                 `protobuf:"bytes,7,opt,name=read_only_pad_id,json=readOnlyPadId,proto3" json:"read_only_pad_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SharedNotePadFeatures) Reset() {
	*x = SharedNotePadFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharedNotePadFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedNotePadFeatures) ProtoMessage() {}

func (x *SharedNotePadFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedNotePadFeatures.ProtoReflect.Descriptor instead.
func (*SharedNotePadFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{4}
}

func (x *SharedNotePadFeatures) GetAllowedSharedNotePad() bool {
	if x != nil {
		return x.AllowedSharedNotePad
	}
	return false
}

func (x *SharedNotePadFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *SharedNotePadFeatures) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SharedNotePadFeatures) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SharedNotePadFeatures) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SharedNotePadFeatures) GetNotePadId() string {
	if x != nil {
		return x.NotePadId
	}
	return ""
}

func (x *SharedNotePadFeatures) GetReadOnlyPadId() string {
	if x != nil {
		return x.ReadOnlyPadId
	}
	return ""
}

type WhiteboardFeatures struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AllowedWhiteboard  bool                   `protobuf:"varint,1,opt,name=allowed_whiteboard,json=allowedWhiteboard,proto3" json:"allowed_whiteboard,omitempty"`
	Visible            bool                   `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	PreloadFile        *string                `protobuf:"bytes,3,opt,name=preload_file,json=preloadFile,proto3,oneof" json:"preload_file,omitempty"`
	WhiteboardFileId   string                 `protobuf:"bytes,4,opt,name=whiteboard_file_id,json=whiteboardFileId,proto3" json:"whiteboard_file_id,omitempty"`
	FileName           string                 `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FilePath           string                 `protobuf:"bytes,6,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	TotalPages         uint32                 `protobuf:"varint,7,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	MaxAllowedFileSize *uint64                `protobuf:"varint,8,opt,name=max_allowed_file_size,json=maxAllowedFileSize,proto3,oneof" json:"max_allowed_file_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WhiteboardFeatures) Reset() {
	*x = WhiteboardFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhiteboardFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteboardFeatures) ProtoMessage() {}

func (x *WhiteboardFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteboardFeatures.ProtoReflect.Descriptor instead.
func (*WhiteboardFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{5}
}

func (x *WhiteboardFeatures) GetAllowedWhiteboard() bool {
	if x != nil {
		return x.AllowedWhiteboard
	}
	return false
}

func (x *WhiteboardFeatures) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *WhiteboardFeatures) GetPreloadFile() string {
	if x != nil && x.PreloadFile != nil {
		return *x.PreloadFile
	}
	return ""
}

func (x *WhiteboardFeatures) GetWhiteboardFileId() string {
	if x != nil {
		return x.WhiteboardFileId
	}
	return ""
}

func (x *WhiteboardFeatures) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *WhiteboardFeatures) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *WhiteboardFeatures) GetTotalPages() uint32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *WhiteboardFeatures) GetMaxAllowedFileSize() uint64 {
	if x != nil && x.MaxAllowedFileSize != nil {
		return *x.MaxAllowedFileSize
	}
	return 0
}

type ExternalMediaPlayerFeatures struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	AllowedExternalMediaPlayer bool                   `protobuf:"varint,1,opt,name=allowed_external_media_player,json=allowedExternalMediaPlayer,proto3" json:"allowed_external_media_player,omitempty"`
	IsActive                   bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	SharedBy                   *string                `protobuf:"bytes,3,opt,name=shared_by,json=sharedBy,proto3,oneof" json:"shared_by,omitempty"`
	Url                        *string                `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ExternalMediaPlayerFeatures) Reset() {
	*x = ExternalMediaPlayerFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalMediaPlayerFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalMediaPlayerFeatures) ProtoMessage() {}

func (x *ExternalMediaPlayerFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalMediaPlayerFeatures.ProtoReflect.Descriptor instead.
func (*ExternalMediaPlayerFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{6}
}

func (x *ExternalMediaPlayerFeatures) GetAllowedExternalMediaPlayer() bool {
	if x != nil {
		return x.AllowedExternalMediaPlayer
	}
	return false
}

func (x *ExternalMediaPlayerFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ExternalMediaPlayerFeatures) GetSharedBy() string {
	if x != nil && x.SharedBy != nil {
		return *x.SharedBy
	}
	return ""
}

func (x *ExternalMediaPlayerFeatures) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type WaitingRoomFeatures struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IsActive       bool                   `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	WaitingRoomMsg string                 `protobuf:"bytes,2,opt,name=waiting_room_msg,json=waitingRoomMsg,proto3" json:"waiting_room_msg,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WaitingRoomFeatures) Reset() {
	*x = WaitingRoomFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitingRoomFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingRoomFeatures) ProtoMessage() {}

func (x *WaitingRoomFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingRoomFeatures.ProtoReflect.Descriptor instead.
func (*WaitingRoomFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{7}
}

func (x *WaitingRoomFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *WaitingRoomFeatures) GetWaitingRoomMsg() string {
	if x != nil {
		return x.WaitingRoomMsg
	}
	return ""
}

type BreakoutRoomFeatures struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IsAllow            bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	IsActive           bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	AllowedNumberRooms uint32                 `protobuf:"varint,3,opt,name=allowed_number_rooms,json=allowedNumberRooms,proto3" json:"allowed_number_rooms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BreakoutRoomFeatures) Reset() {
	*x = BreakoutRoomFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BreakoutRoomFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakoutRoomFeatures) ProtoMessage() {}

func (x *BreakoutRoomFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakoutRoomFeatures.ProtoReflect.Descriptor instead.
func (*BreakoutRoomFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{8}
}

func (x *BreakoutRoomFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *BreakoutRoomFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *BreakoutRoomFeatures) GetAllowedNumberRooms() uint32 {
	if x != nil {
		return x.AllowedNumberRooms
	}
	return 0
}

type DisplayExternalLinkFeatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAllow       bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	IsActive      bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Link          *string                `protobuf:"bytes,3,opt,name=link,proto3,oneof" json:"link,omitempty"`
	SharedBy      *string                `protobuf:"bytes,4,opt,name=shared_by,json=sharedBy,proto3,oneof" json:"shared_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayExternalLinkFeatures) Reset() {
	*x = DisplayExternalLinkFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayExternalLinkFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayExternalLinkFeatures) ProtoMessage() {}

func (x *DisplayExternalLinkFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayExternalLinkFeatures.ProtoReflect.Descriptor instead.
func (*DisplayExternalLinkFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{9}
}

func (x *DisplayExternalLinkFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *DisplayExternalLinkFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *DisplayExternalLinkFeatures) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *DisplayExternalLinkFeatures) GetSharedBy() string {
	if x != nil && x.SharedBy != nil {
		return *x.SharedBy
	}
	return ""
}

type RecordingFeatures struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	IsAllow                  bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	IsAllowCloud             bool                   `protobuf:"varint,2,opt,name=is_allow_cloud,json=isAllowCloud,proto3" json:"is_allow_cloud,omitempty"`
	EnableAutoCloudRecording bool                   `protobuf:"varint,3,opt,name=enable_auto_cloud_recording,json=enableAutoCloudRecording,proto3" json:"enable_auto_cloud_recording,omitempty"`
	IsAllowLocal             bool                   `protobuf:"varint,4,opt,name=is_allow_local,json=isAllowLocal,proto3" json:"is_allow_local,omitempty"`
	OnlyRecordAdminWebcams   bool                   `protobuf:"varint,5,opt,name=only_record_admin_webcams,json=onlyRecordAdminWebcams,proto3" json:"only_record_admin_webcams,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RecordingFeatures) Reset() {
	*x = RecordingFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingFeatures) ProtoMessage() {}

func (x *RecordingFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingFeatures.ProtoReflect.Descriptor instead.
func (*RecordingFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{10}
}

func (x *RecordingFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *RecordingFeatures) GetIsAllowCloud() bool {
	if x != nil {
		return x.IsAllowCloud
	}
	return false
}

func (x *RecordingFeatures) GetEnableAutoCloudRecording() bool {
	if x != nil {
		return x.EnableAutoCloudRecording
	}
	return false
}

func (x *RecordingFeatures) GetIsAllowLocal() bool {
	if x != nil {
		return x.IsAllowLocal
	}
	return false
}

func (x *RecordingFeatures) GetOnlyRecordAdminWebcams() bool {
	if x != nil {
		return x.OnlyRecordAdminWebcams
	}
	return false
}

type IngressFeatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAllow       bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	InputType     IngressInput           `protobuf:"varint,2,opt,name=input_type,json=inputType,proto3,enum=plugnmeet.IngressInput" json:"input_type,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	StreamKey     string                 `protobuf:"bytes,4,opt,name=stream_key,json=streamKey,proto3" json:"stream_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngressFeatures) Reset() {
	*x = IngressFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngressFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressFeatures) ProtoMessage() {}

func (x *IngressFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressFeatures.ProtoReflect.Descriptor instead.
func (*IngressFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{11}
}

func (x *IngressFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *IngressFeatures) GetInputType() IngressInput {
	if x != nil {
		return x.InputType
	}
	return IngressInput_RTMP_INPUT
}

func (x *IngressFeatures) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *IngressFeatures) GetStreamKey() string {
	if x != nil {
		return x.StreamKey
	}
	return ""
}

type SpeechToTextTranslationFeatures struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	IsAllow                       bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	IsAllowTranslation            bool                   `protobuf:"varint,2,opt,name=is_allow_translation,json=isAllowTranslation,proto3" json:"is_allow_translation,omitempty"`
	IsEnabled                     bool                   `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	IsEnabledTranslation          bool                   `protobuf:"varint,4,opt,name=is_enabled_translation,json=isEnabledTranslation,proto3" json:"is_enabled_translation,omitempty"`
	MaxNumTranLangsAllowSelecting int32                  `protobuf:"varint,11,opt,name=max_num_tran_langs_allow_selecting,json=maxNumTranLangsAllowSelecting,proto3" json:"max_num_tran_langs_allow_selecting,omitempty"`
	AllowedSpeechLangs            []string               `protobuf:"bytes,7,rep,name=allowed_speech_langs,json=allowedSpeechLangs,proto3" json:"allowed_speech_langs,omitempty"`
	AllowedSpeechUsers            []string               `protobuf:"bytes,8,rep,name=allowed_speech_users,json=allowedSpeechUsers,proto3" json:"allowed_speech_users,omitempty"`
	AllowedTransLangs             []string               `protobuf:"bytes,9,rep,name=allowed_trans_langs,json=allowedTransLangs,proto3" json:"allowed_trans_langs,omitempty"`
	DefaultSubtitleLang           *string                `protobuf:"bytes,10,opt,name=default_subtitle_lang,json=defaultSubtitleLang,proto3,oneof" json:"default_subtitle_lang,omitempty"` // next ID: 12
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *SpeechToTextTranslationFeatures) Reset() {
	*x = SpeechToTextTranslationFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeechToTextTranslationFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechToTextTranslationFeatures) ProtoMessage() {}

func (x *SpeechToTextTranslationFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechToTextTranslationFeatures.ProtoReflect.Descriptor instead.
func (*SpeechToTextTranslationFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{12}
}

func (x *SpeechToTextTranslationFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *SpeechToTextTranslationFeatures) GetIsAllowTranslation() bool {
	if x != nil {
		return x.IsAllowTranslation
	}
	return false
}

func (x *SpeechToTextTranslationFeatures) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *SpeechToTextTranslationFeatures) GetIsEnabledTranslation() bool {
	if x != nil {
		return x.IsEnabledTranslation
	}
	return false
}

func (x *SpeechToTextTranslationFeatures) GetMaxNumTranLangsAllowSelecting() int32 {
	if x != nil {
		return x.MaxNumTranLangsAllowSelecting
	}
	return 0
}

func (x *SpeechToTextTranslationFeatures) GetAllowedSpeechLangs() []string {
	if x != nil {
		return x.AllowedSpeechLangs
	}
	return nil
}

func (x *SpeechToTextTranslationFeatures) GetAllowedSpeechUsers() []string {
	if x != nil {
		return x.AllowedSpeechUsers
	}
	return nil
}

func (x *SpeechToTextTranslationFeatures) GetAllowedTransLangs() []string {
	if x != nil {
		return x.AllowedTransLangs
	}
	return nil
}

func (x *SpeechToTextTranslationFeatures) GetDefaultSubtitleLang() string {
	if x != nil && x.DefaultSubtitleLang != nil {
		return *x.DefaultSubtitleLang
	}
	return ""
}

type EndToEndEncryptionFeatures struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	IsEnabled            bool                   `protobuf:"varint,1,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	IncludedChatMessages bool                   `protobuf:"varint,2,opt,name=included_chat_messages,json=includedChatMessages,proto3" json:"included_chat_messages,omitempty"`
	// SCENE_UPDATE, POINTER_UPDATE
	// this may use more CPU for the user end.
	// do not enable it unless really necessary
	IncludedWhiteboard             bool    `protobuf:"varint,3,opt,name=included_whiteboard,json=includedWhiteboard,proto3" json:"included_whiteboard,omitempty"`
	EncryptionKey                  *string `protobuf:"bytes,4,opt,name=encryption_key,json=encryptionKey,proto3,oneof" json:"encryption_key,omitempty"`
	EnabledSelfInsertEncryptionKey bool    `protobuf:"varint,5,opt,name=enabled_self_insert_encryption_key,json=enabledSelfInsertEncryptionKey,proto3" json:"enabled_self_insert_encryption_key,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *EndToEndEncryptionFeatures) Reset() {
	*x = EndToEndEncryptionFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndToEndEncryptionFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndToEndEncryptionFeatures) ProtoMessage() {}

func (x *EndToEndEncryptionFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndToEndEncryptionFeatures.ProtoReflect.Descriptor instead.
func (*EndToEndEncryptionFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{13}
}

func (x *EndToEndEncryptionFeatures) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *EndToEndEncryptionFeatures) GetIncludedChatMessages() bool {
	if x != nil {
		return x.IncludedChatMessages
	}
	return false
}

func (x *EndToEndEncryptionFeatures) GetIncludedWhiteboard() bool {
	if x != nil {
		return x.IncludedWhiteboard
	}
	return false
}

func (x *EndToEndEncryptionFeatures) GetEncryptionKey() string {
	if x != nil && x.EncryptionKey != nil {
		return *x.EncryptionKey
	}
	return ""
}

func (x *EndToEndEncryptionFeatures) GetEnabledSelfInsertEncryptionKey() bool {
	if x != nil {
		return x.EnabledSelfInsertEncryptionKey
	}
	return false
}

type PollsFeatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAllow       bool                   `protobuf:"varint,1,opt,name=is_allow,json=isAllow,proto3" json:"is_allow,omitempty"`
	IsActive      bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollsFeatures) Reset() {
	*x = PollsFeatures{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollsFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollsFeatures) ProtoMessage() {}

func (x *PollsFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollsFeatures.ProtoReflect.Descriptor instead.
func (*PollsFeatures) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{14}
}

func (x *PollsFeatures) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *PollsFeatures) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CopyrightConf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Display       bool                   `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyrightConf) Reset() {
	*x = CopyrightConf{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyrightConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyrightConf) ProtoMessage() {}

func (x *CopyrightConf) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyrightConf.ProtoReflect.Descriptor instead.
func (*CopyrightConf) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{15}
}

func (x *CopyrightConf) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *CopyrightConf) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateRoomRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RoomInfo      *ActiveRoomInfo        `protobuf:"bytes,3,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomRes) Reset() {
	*x = CreateRoomRes{}
	mi := &file_plugnmeet_create_room_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRes) ProtoMessage() {}

func (x *CreateRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_create_room_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRes.ProtoReflect.Descriptor instead.
func (*CreateRoomRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_create_room_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRoomRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateRoomRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateRoomRes) GetRoomInfo() *ActiveRoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

var File_plugnmeet_create_room_proto protoreflect.FileDescriptor

const file_plugnmeet_create_room_proto_rawDesc = "" +
	"\n" +
	"\x1bplugnmeet_create_room.proto\x12\tplugnmeet\x1a\x19plugnmeet_gen_token.proto\x1a\x1bbuf/validate/validate.proto\x1a\x17plugnmeet_ingress.proto\x1a\x19plugnmeet_auth_room.proto\"\xfd\x02\n" +
	"\rCreateRoomReq\x12\x9b\x01\n" +
	"\aroom_id\x18\x01 \x01(\tB\x81\x01\xbaH~\xba\x01{\n" +
	"\x0eroom_id_format\x12Groom_id should only contain ASCII letters (a-z A-Z), digits (0-9) or -_\x1a this.matches('^[a-zA-Z0-9-_]+$')R\x06roomId\x121\n" +
	"\rempty_timeout\x18\x02 \x01(\rB\a\xbaH\x04*\x02 \x00H\x00R\femptyTimeout\x88\x01\x01\x127\n" +
	"\x10max_participants\x18\x03 \x01(\rB\a\xbaH\x04*\x02 \x00H\x01R\x0fmaxParticipants\x88\x01\x01\x12;\n" +
	"\bmetadata\x18\x04 \x01(\v2\x17.plugnmeet.RoomMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadataB\x10\n" +
	"\x0e_empty_timeoutB\x13\n" +
	"\x11_max_participants\"\xce\a\n" +
	"\fRoomMetadata\x12%\n" +
	"\n" +
	"room_title\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\troomTitle\x12,\n" +
	"\x0fwelcome_message\x18\x02 \x01(\tH\x00R\x0ewelcomeMessage\x88\x01\x01\x12*\n" +
	"\fis_recording\x18\x03 \x01(\bB\a\xbaH\x04j\x02\b\x00R\visRecording\x12-\n" +
	"\x0eis_active_rtmp\x18\x04 \x01(\bB\a\xbaH\x04j\x02\b\x00R\fisActiveRtmp\x12\x84\x01\n" +
	"\x0eparent_room_id\x18\x05 \x01(\tB^\xbaH[\xba\x01X\n" +
	"\x15parent_room_id_format\x12+parent_room_id should not contain any value\x1a\x12this.matches('^$')R\fparentRoomId\x121\n" +
	"\x10is_breakout_room\x18\x06 \x01(\bB\a\xbaH\x04j\x02\b\x00R\x0eisBreakoutRoom\x12.\n" +
	"\vwebhook_url\x18\a \x01(\tB\b\xbaH\x05r\x03\x88\x01\x01H\x01R\n" +
	"webhookUrl\x88\x01\x01\x12&\n" +
	"\n" +
	"started_at\x18\b \x01(\x04B\a\xbaH\x042\x02\b\x00R\tstartedAt\x12,\n" +
	"\n" +
	"logout_url\x18\t \x01(\tB\b\xbaH\x05r\x03\x88\x01\x01H\x02R\tlogoutUrl\x88\x01\x01\x12J\n" +
	"\rroom_features\x18\n" +
	" \x01(\v2\x1d.plugnmeet.RoomCreateFeaturesB\x06\xbaH\x03\xc8\x01\x01R\froomFeatures\x12K\n" +
	"\x15default_lock_settings\x18\v \x01(\v2\x17.plugnmeet.LockSettingsR\x13defaultLockSettings\x12?\n" +
	"\x0ecopyright_conf\x18\f \x01(\v2\x18.plugnmeet.CopyrightConfR\rcopyrightConf\x12~\n" +
	"\vmetadata_id\x18\r \x01(\tBX\xbaHU\xba\x01R\n" +
	"\x12metadata_id_format\x12(metadata_id should not contain any value\x1a\x12this.matches('^$')H\x03R\n" +
	"metadataId\x88\x01\x01\x12\"\n" +
	"\n" +
	"extra_data\x18\x0e \x01(\tH\x04R\textraData\x88\x01\x01B\x12\n" +
	"\x10_welcome_messageB\x0e\n" +
	"\f_webhook_urlB\r\n" +
	"\v_logout_urlB\x0e\n" +
	"\f_metadata_idB\r\n" +
	"\v_extra_data\"\xce\r\n" +
	"\x12RoomCreateFeatures\x12#\n" +
	"\rallow_webcams\x18\x01 \x01(\bR\fallowWebcams\x12\"\n" +
	"\rmute_on_start\x18\x02 \x01(\bR\vmuteOnStart\x12,\n" +
	"\x12allow_screen_share\x18\x03 \x01(\bR\x10allowScreenShare\x12\x1d\n" +
	"\n" +
	"allow_rtmp\x18\x04 \x01(\bR\tallowRtmp\x127\n" +
	"\x18allow_view_other_webcams\x18\x05 \x01(\bR\x15allowViewOtherWebcams\x12<\n" +
	"\x1ballow_view_other_users_list\x18\x06 \x01(\bR\x17allowViewOtherUsersList\x12,\n" +
	"\x12admin_only_webcams\x18\a \x01(\bR\x10adminOnlyWebcams\x12#\n" +
	"\vallow_polls\x18\b \x01(\bB\x02\x18\x01R\n" +
	"allowPolls\x12(\n" +
	"\rroom_duration\x18\t \x01(\x04H\x00R\froomDuration\x88\x01\x01\x12)\n" +
	"\x10enable_analytics\x18\n" +
	" \x01(\bR\x0fenableAnalytics\x12-\n" +
	"\x10allow_virtual_bg\x18\v \x01(\bH\x01R\x0eallowVirtualBg\x88\x01\x01\x12-\n" +
	"\x10allow_raise_hand\x18\f \x01(\bH\x02R\x0eallowRaiseHand\x88\x01\x01\x12,\n" +
	"\x10auto_gen_user_id\x18\r \x01(\bH\x03R\rautoGenUserId\x88\x01\x01\x12K\n" +
	"\x12recording_features\x18\x0e \x01(\v2\x1c.plugnmeet.RecordingFeaturesR\x11recordingFeatures\x12<\n" +
	"\rchat_features\x18\x0f \x01(\v2\x17.plugnmeet.ChatFeaturesR\fchatFeatures\x12Y\n" +
	"\x18shared_note_pad_features\x18\x10 \x01(\v2 .plugnmeet.SharedNotePadFeaturesR\x15sharedNotePadFeatures\x12N\n" +
	"\x13whiteboard_features\x18\x11 \x01(\v2\x1d.plugnmeet.WhiteboardFeaturesR\x12whiteboardFeatures\x12k\n" +
	"\x1eexternal_media_player_features\x18\x12 \x01(\v2&.plugnmeet.ExternalMediaPlayerFeaturesR\x1bexternalMediaPlayerFeatures\x12R\n" +
	"\x15waiting_room_features\x18\x13 \x01(\v2\x1e.plugnmeet.WaitingRoomFeaturesR\x13waitingRoomFeatures\x12U\n" +
	"\x16breakout_room_features\x18\x14 \x01(\v2\x1f.plugnmeet.BreakoutRoomFeaturesR\x14breakoutRoomFeatures\x12k\n" +
	"\x1edisplay_external_link_features\x18\x15 \x01(\v2&.plugnmeet.DisplayExternalLinkFeaturesR\x1bdisplayExternalLinkFeatures\x12E\n" +
	"\x10ingress_features\x18\x16 \x01(\v2\x1a.plugnmeet.IngressFeaturesR\x0fingressFeatures\x12x\n" +
	"#speech_to_text_translation_features\x18\x17 \x01(\v2*.plugnmeet.SpeechToTextTranslationFeaturesR\x1fspeechToTextTranslationFeatures\x12i\n" +
	"\x1eend_to_end_encryption_features\x18\x18 \x01(\v2%.plugnmeet.EndToEndEncryptionFeaturesR\x1aendToEndEncryptionFeatures\x12?\n" +
	"\x0epolls_features\x18\x19 \x01(\v2\x18.plugnmeet.PollsFeaturesR\rpollsFeaturesB\x10\n" +
	"\x0e_room_durationB\x13\n" +
	"\x11_allow_virtual_bgB\x13\n" +
	"\x11_allow_raise_handB\x13\n" +
	"\x11_auto_gen_user_id\"\xc2\x01\n" +
	"\fChatFeatures\x12\x1d\n" +
	"\n" +
	"allow_chat\x18\x01 \x01(\bR\tallowChat\x12*\n" +
	"\x11allow_file_upload\x18\x02 \x01(\bR\x0fallowFileUpload\x12,\n" +
	"\x12allowed_file_types\x18\x03 \x03(\tR\x10allowedFileTypes\x12'\n" +
	"\rmax_file_size\x18\x04 \x01(\x04H\x00R\vmaxFileSize\x88\x01\x01B\x10\n" +
	"\x0e_max_file_size\"\xea\x04\n" +
	"\x15SharedNotePadFeatures\x125\n" +
	"\x17allowed_shared_note_pad\x18\x01 \x01(\bR\x14allowedSharedNotePad\x12$\n" +
	"\tis_active\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\bisActive\x12!\n" +
	"\avisible\x18\x03 \x01(\bB\a\xbaH\x04j\x02\b\x00R\avisible\x12i\n" +
	"\anode_id\x18\x04 \x01(\tBP\xbaHM\xba\x01J\n" +
	"\x0enode_id_format\x12$node_id should not contain any value\x1a\x12this.matches('^$')R\x06nodeId\x12^\n" +
	"\x04host\x18\x05 \x01(\tBJ\xbaHG\xba\x01D\n" +
	"\vhost_format\x12!host should not contain any value\x1a\x12this.matches('^$')R\x04host\x12x\n" +
	"\vnote_pad_id\x18\x06 \x01(\tBX\xbaHU\xba\x01R\n" +
	"\x12note_pad_id_format\x12(note_pad_id should not contain any value\x1a\x12this.matches('^$')R\tnotePadId\x12\x8b\x01\n" +
	"\x10read_only_pad_id\x18\a \x01(\tBb\xbaH_\xba\x01\\\n" +
	"\x17read_only_pad_id_format\x12-read_only_pad_id should not contain any value\x1a\x12this.matches('^$')R\rreadOnlyPadId\"\xa2\x05\n" +
	"\x12WhiteboardFeatures\x12-\n" +
	"\x12allowed_whiteboard\x18\x01 \x01(\bR\x11allowedWhiteboard\x12!\n" +
	"\avisible\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\avisible\x120\n" +
	"\fpreload_file\x18\x03 \x01(\tB\b\xbaH\x05r\x03\x88\x01\x01H\x00R\vpreloadFile\x88\x01\x01\x12\x94\x01\n" +
	"\x12whiteboard_file_id\x18\x04 \x01(\tBf\xbaHc\xba\x01`\n" +
	"\x19whiteboard_file_id_format\x12/whiteboard_file_id should not contain any value\x1a\x12this.matches('^$')R\x10whiteboardFileId\x12q\n" +
	"\tfile_name\x18\x05 \x01(\tBT\xbaHQ\xba\x01N\n" +
	"\x10file_name_format\x12&file_name should not contain any value\x1a\x12this.matches('^$')R\bfileName\x12q\n" +
	"\tfile_path\x18\x06 \x01(\tBT\xbaHQ\xba\x01N\n" +
	"\x10file_path_format\x12&file_path should not contain any value\x1a\x12this.matches('^$')R\bfilePath\x12\x1f\n" +
	"\vtotal_pages\x18\a \x01(\rR\n" +
	"totalPages\x12?\n" +
	"\x15max_allowed_file_size\x18\b \x01(\x04B\a\xbaH\x042\x02\b\x00H\x01R\x12maxAllowedFileSize\x88\x01\x01B\x0f\n" +
	"\r_preload_fileB\x18\n" +
	"\x16_max_allowed_file_size\"\xf5\x02\n" +
	"\x1bExternalMediaPlayerFeatures\x12A\n" +
	"\x1dallowed_external_media_player\x18\x01 \x01(\bR\x1aallowedExternalMediaPlayer\x12$\n" +
	"\tis_active\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\bisActive\x12v\n" +
	"\tshared_by\x18\x03 \x01(\tBT\xbaHQ\xba\x01N\n" +
	"\x10shared_by_format\x12&shared_by should not contain any value\x1a\x12this.matches('^$')H\x00R\bsharedBy\x88\x01\x01\x12_\n" +
	"\x03url\x18\x04 \x01(\tBH\xbaHE\xba\x01B\n" +
	"\n" +
	"url_format\x12 url should not contain any value\x1a\x12this.matches('^$')H\x01R\x03url\x88\x01\x01B\f\n" +
	"\n" +
	"_shared_byB\x06\n" +
	"\x04_url\"\\\n" +
	"\x13WaitingRoomFeatures\x12\x1b\n" +
	"\tis_active\x18\x01 \x01(\bR\bisActive\x12(\n" +
	"\x10waiting_room_msg\x18\x02 \x01(\tR\x0ewaitingRoomMsg\"\x89\x01\n" +
	"\x14BreakoutRoomFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x12$\n" +
	"\tis_active\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\bisActive\x120\n" +
	"\x14allowed_number_rooms\x18\x03 \x01(\rR\x12allowedNumberRooms\"\xb0\x01\n" +
	"\x1bDisplayExternalLinkFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x12$\n" +
	"\tis_active\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\bisActive\x12\x17\n" +
	"\x04link\x18\x03 \x01(\tH\x00R\x04link\x88\x01\x01\x12 \n" +
	"\tshared_by\x18\x04 \x01(\tH\x01R\bsharedBy\x88\x01\x01B\a\n" +
	"\x05_linkB\f\n" +
	"\n" +
	"_shared_by\"\xf4\x01\n" +
	"\x11RecordingFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x12$\n" +
	"\x0eis_allow_cloud\x18\x02 \x01(\bR\fisAllowCloud\x12=\n" +
	"\x1benable_auto_cloud_recording\x18\x03 \x01(\bR\x18enableAutoCloudRecording\x12$\n" +
	"\x0eis_allow_local\x18\x04 \x01(\bR\fisAllowLocal\x129\n" +
	"\x19only_record_admin_webcams\x18\x05 \x01(\bR\x16onlyRecordAdminWebcams\"\xb7\x02\n" +
	"\x0fIngressFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x126\n" +
	"\n" +
	"input_type\x18\x02 \x01(\x0e2\x17.plugnmeet.IngressInputR\tinputType\x12Z\n" +
	"\x03url\x18\x03 \x01(\tBH\xbaHE\xba\x01B\n" +
	"\n" +
	"url_format\x12 url should not contain any value\x1a\x12this.matches('^$')R\x03url\x12u\n" +
	"\n" +
	"stream_key\x18\x04 \x01(\tBV\xbaHS\xba\x01P\n" +
	"\x11stream_key_format\x12'stream_key should not contain any value\x1a\x12this.matches('^$')R\tstreamKey\"\x94\x05\n" +
	"\x1fSpeechToTextTranslationFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x120\n" +
	"\x14is_allow_translation\x18\x02 \x01(\bR\x12isAllowTranslation\x12&\n" +
	"\n" +
	"is_enabled\x18\x03 \x01(\bB\a\xbaH\x04j\x02\b\x00R\tisEnabled\x12=\n" +
	"\x16is_enabled_translation\x18\x04 \x01(\bB\a\xbaH\x04j\x02\b\x00R\x14isEnabledTranslation\x12I\n" +
	"\"max_num_tran_langs_allow_selecting\x18\v \x01(\x05R\x1dmaxNumTranLangsAllowSelecting\x12:\n" +
	"\x14allowed_speech_langs\x18\a \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\x00R\x12allowedSpeechLangs\x12:\n" +
	"\x14allowed_speech_users\x18\b \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\x00R\x12allowedSpeechUsers\x128\n" +
	"\x13allowed_trans_langs\x18\t \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\x00R\x11allowedTransLangs\x12\xa5\x01\n" +
	"\x15default_subtitle_lang\x18\n" +
	" \x01(\tBl\xbaHi\xba\x01f\n" +
	"\x1cdefault_subtitle_lang_format\x122default_subtitle_lang should not contain any value\x1a\x12this.matches('^$')H\x00R\x13defaultSubtitleLang\x88\x01\x01B\x18\n" +
	"\x16_default_subtitle_lang\"\x8e\x03\n" +
	"\x1aEndToEndEncryptionFeatures\x12\x1d\n" +
	"\n" +
	"is_enabled\x18\x01 \x01(\bR\tisEnabled\x124\n" +
	"\x16included_chat_messages\x18\x02 \x01(\bR\x14includedChatMessages\x12/\n" +
	"\x13included_whiteboard\x18\x03 \x01(\bR\x12includedWhiteboard\x12\x8a\x01\n" +
	"\x0eencryption_key\x18\x04 \x01(\tB^\xbaH[\xba\x01X\n" +
	"\x15encryption_key_format\x12+encryption_key should not contain any value\x1a\x12this.matches('^$')H\x00R\rencryptionKey\x88\x01\x01\x12J\n" +
	"\"enabled_self_insert_encryption_key\x18\x05 \x01(\bR\x1eenabledSelfInsertEncryptionKeyB\x11\n" +
	"\x0f_encryption_key\"P\n" +
	"\rPollsFeatures\x12\x19\n" +
	"\bis_allow\x18\x01 \x01(\bR\aisAllow\x12$\n" +
	"\tis_active\x18\x02 \x01(\bB\a\xbaH\x04j\x02\b\x00R\bisActive\"=\n" +
	"\rCopyrightConf\x12\x18\n" +
	"\adisplay\x18\x01 \x01(\bR\adisplay\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\"q\n" +
	"\rCreateRoomRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x126\n" +
	"\troom_info\x18\x03 \x01(\v2\x19.plugnmeet.ActiveRoomInfoR\broomInfoB\xa1\x01\n" +
	"\rcom.plugnmeetB\x18PlugnmeetCreateRoomProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_create_room_proto_rawDescOnce sync.Once
	file_plugnmeet_create_room_proto_rawDescData []byte
)

func file_plugnmeet_create_room_proto_rawDescGZIP() []byte {
	file_plugnmeet_create_room_proto_rawDescOnce.Do(func() {
		file_plugnmeet_create_room_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_create_room_proto_rawDesc), len(file_plugnmeet_create_room_proto_rawDesc)))
	})
	return file_plugnmeet_create_room_proto_rawDescData
}

var file_plugnmeet_create_room_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_plugnmeet_create_room_proto_goTypes = []any{
	(*CreateRoomReq)(nil),                   // 0: plugnmeet.CreateRoomReq
	(*RoomMetadata)(nil),                    // 1: plugnmeet.RoomMetadata
	(*RoomCreateFeatures)(nil),              // 2: plugnmeet.RoomCreateFeatures
	(*ChatFeatures)(nil),                    // 3: plugnmeet.ChatFeatures
	(*SharedNotePadFeatures)(nil),           // 4: plugnmeet.SharedNotePadFeatures
	(*WhiteboardFeatures)(nil),              // 5: plugnmeet.WhiteboardFeatures
	(*ExternalMediaPlayerFeatures)(nil),     // 6: plugnmeet.ExternalMediaPlayerFeatures
	(*WaitingRoomFeatures)(nil),             // 7: plugnmeet.WaitingRoomFeatures
	(*BreakoutRoomFeatures)(nil),            // 8: plugnmeet.BreakoutRoomFeatures
	(*DisplayExternalLinkFeatures)(nil),     // 9: plugnmeet.DisplayExternalLinkFeatures
	(*RecordingFeatures)(nil),               // 10: plugnmeet.RecordingFeatures
	(*IngressFeatures)(nil),                 // 11: plugnmeet.IngressFeatures
	(*SpeechToTextTranslationFeatures)(nil), // 12: plugnmeet.SpeechToTextTranslationFeatures
	(*EndToEndEncryptionFeatures)(nil),      // 13: plugnmeet.EndToEndEncryptionFeatures
	(*PollsFeatures)(nil),                   // 14: plugnmeet.PollsFeatures
	(*CopyrightConf)(nil),                   // 15: plugnmeet.CopyrightConf
	(*CreateRoomRes)(nil),                   // 16: plugnmeet.CreateRoomRes
	(*LockSettings)(nil),                    // 17: plugnmeet.LockSettings
	(IngressInput)(0),                       // 18: plugnmeet.IngressInput
	(*ActiveRoomInfo)(nil),                  // 19: plugnmeet.ActiveRoomInfo
}
var file_plugnmeet_create_room_proto_depIdxs = []int32{
	1,  // 0: plugnmeet.CreateRoomReq.metadata:type_name -> plugnmeet.RoomMetadata
	2,  // 1: plugnmeet.RoomMetadata.room_features:type_name -> plugnmeet.RoomCreateFeatures
	17, // 2: plugnmeet.RoomMetadata.default_lock_settings:type_name -> plugnmeet.LockSettings
	15, // 3: plugnmeet.RoomMetadata.copyright_conf:type_name -> plugnmeet.CopyrightConf
	10, // 4: plugnmeet.RoomCreateFeatures.recording_features:type_name -> plugnmeet.RecordingFeatures
	3,  // 5: plugnmeet.RoomCreateFeatures.chat_features:type_name -> plugnmeet.ChatFeatures
	4,  // 6: plugnmeet.RoomCreateFeatures.shared_note_pad_features:type_name -> plugnmeet.SharedNotePadFeatures
	5,  // 7: plugnmeet.RoomCreateFeatures.whiteboard_features:type_name -> plugnmeet.WhiteboardFeatures
	6,  // 8: plugnmeet.RoomCreateFeatures.external_media_player_features:type_name -> plugnmeet.ExternalMediaPlayerFeatures
	7,  // 9: plugnmeet.RoomCreateFeatures.waiting_room_features:type_name -> plugnmeet.WaitingRoomFeatures
	8,  // 10: plugnmeet.RoomCreateFeatures.breakout_room_features:type_name -> plugnmeet.BreakoutRoomFeatures
	9,  // 11: plugnmeet.RoomCreateFeatures.display_external_link_features:type_name -> plugnmeet.DisplayExternalLinkFeatures
	11, // 12: plugnmeet.RoomCreateFeatures.ingress_features:type_name -> plugnmeet.IngressFeatures
	12, // 13: plugnmeet.RoomCreateFeatures.speech_to_text_translation_features:type_name -> plugnmeet.SpeechToTextTranslationFeatures
	13, // 14: plugnmeet.RoomCreateFeatures.end_to_end_encryption_features:type_name -> plugnmeet.EndToEndEncryptionFeatures
	14, // 15: plugnmeet.RoomCreateFeatures.polls_features:type_name -> plugnmeet.PollsFeatures
	18, // 16: plugnmeet.IngressFeatures.input_type:type_name -> plugnmeet.IngressInput
	19, // 17: plugnmeet.CreateRoomRes.room_info:type_name -> plugnmeet.ActiveRoomInfo
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_plugnmeet_create_room_proto_init() }
func file_plugnmeet_create_room_proto_init() {
	if File_plugnmeet_create_room_proto != nil {
		return
	}
	file_plugnmeet_gen_token_proto_init()
	file_plugnmeet_ingress_proto_init()
	file_plugnmeet_auth_room_proto_init()
	file_plugnmeet_create_room_proto_msgTypes[0].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[1].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[2].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[3].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[5].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[6].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[9].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[12].OneofWrappers = []any{}
	file_plugnmeet_create_room_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_create_room_proto_rawDesc), len(file_plugnmeet_create_room_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_create_room_proto_goTypes,
		DependencyIndexes: file_plugnmeet_create_room_proto_depIdxs,
		MessageInfos:      file_plugnmeet_create_room_proto_msgTypes,
	}.Build()
	File_plugnmeet_create_room_proto = out.File
	file_plugnmeet_create_room_proto_goTypes = nil
	file_plugnmeet_create_room_proto_depIdxs = nil
}
