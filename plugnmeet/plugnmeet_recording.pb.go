// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: plugnmeet_recording.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          RecordingTasks         `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.RecordingTasks" json:"task,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomTableId   int64                  `protobuf:"varint,3,opt,name=room_table_id,json=roomTableId,proto3" json:"room_table_id,omitempty"`
	Sid           string                 `protobuf:"bytes,4,opt,name=sid,proto3" json:"sid,omitempty"`
	RtmpUrl       *string                `protobuf:"bytes,5,opt,name=rtmp_url,json=rtmpUrl,proto3,oneof" json:"rtmp_url,omitempty"`
	CustomDesign  *string                `protobuf:"bytes,6,opt,name=custom_design,json=customDesign,proto3,oneof" json:"custom_design,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingReq) Reset() {
	*x = RecordingReq{}
	mi := &file_plugnmeet_recording_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingReq) ProtoMessage() {}

func (x *RecordingReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_recording_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingReq.ProtoReflect.Descriptor instead.
func (*RecordingReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_recording_proto_rawDescGZIP(), []int{0}
}

func (x *RecordingReq) GetTask() RecordingTasks {
	if x != nil {
		return x.Task
	}
	return RecordingTasks_START_RECORDING
}

func (x *RecordingReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RecordingReq) GetRoomTableId() int64 {
	if x != nil {
		return x.RoomTableId
	}
	return 0
}

func (x *RecordingReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *RecordingReq) GetRtmpUrl() string {
	if x != nil && x.RtmpUrl != nil {
		return *x.RtmpUrl
	}
	return ""
}

func (x *RecordingReq) GetCustomDesign() string {
	if x != nil && x.CustomDesign != nil {
		return *x.CustomDesign
	}
	return ""
}

type RecordingInfoFile struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoomTableId      int64                  `protobuf:"varint,1,opt,name=room_table_id,json=roomTableId,proto3" json:"room_table_id,omitempty"`
	RoomId           string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomTitle        string                 `protobuf:"bytes,3,opt,name=room_title,json=roomTitle,proto3" json:"room_title,omitempty"`
	RoomSid          string                 `protobuf:"bytes,4,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	RoomCreationTime int64                  `protobuf:"varint,5,opt,name=room_creation_time,json=roomCreationTime,proto3" json:"room_creation_time,omitempty"`
	RoomEnded        int64                  `protobuf:"varint,6,opt,name=room_ended,json=roomEnded,proto3" json:"room_ended,omitempty"`
	RecordingId      string                 `protobuf:"bytes,7,opt,name=recording_id,json=recordingId,proto3" json:"recording_id,omitempty"`
	RecorderId       string                 `protobuf:"bytes,8,opt,name=recorder_id,json=recorderId,proto3" json:"recorder_id,omitempty"`
	FilePath         string                 `protobuf:"bytes,9,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileSize         float32                `protobuf:"fixed32,10,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	CreationTime     int64                  `protobuf:"varint,11,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordingInfoFile) Reset() {
	*x = RecordingInfoFile{}
	mi := &file_plugnmeet_recording_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingInfoFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingInfoFile) ProtoMessage() {}

func (x *RecordingInfoFile) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_recording_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingInfoFile.ProtoReflect.Descriptor instead.
func (*RecordingInfoFile) Descriptor() ([]byte, []int) {
	return file_plugnmeet_recording_proto_rawDescGZIP(), []int{1}
}

func (x *RecordingInfoFile) GetRoomTableId() int64 {
	if x != nil {
		return x.RoomTableId
	}
	return 0
}

func (x *RecordingInfoFile) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RecordingInfoFile) GetRoomTitle() string {
	if x != nil {
		return x.RoomTitle
	}
	return ""
}

func (x *RecordingInfoFile) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *RecordingInfoFile) GetRoomCreationTime() int64 {
	if x != nil {
		return x.RoomCreationTime
	}
	return 0
}

func (x *RecordingInfoFile) GetRoomEnded() int64 {
	if x != nil {
		return x.RoomEnded
	}
	return 0
}

func (x *RecordingInfoFile) GetRecordingId() string {
	if x != nil {
		return x.RecordingId
	}
	return ""
}

func (x *RecordingInfoFile) GetRecorderId() string {
	if x != nil {
		return x.RecorderId
	}
	return ""
}

func (x *RecordingInfoFile) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *RecordingInfoFile) GetFileSize() float32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *RecordingInfoFile) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

var File_plugnmeet_recording_proto protoreflect.FileDescriptor

const file_plugnmeet_recording_proto_rawDesc = "" +
	"\n" +
	"\x19plugnmeet_recording.proto\x12\tplugnmeet\x1a\x18plugnmeet_recorder.proto\"\xf5\x01\n" +
	"\fRecordingReq\x12-\n" +
	"\x04task\x18\x01 \x01(\x0e2\x19.plugnmeet.RecordingTasksR\x04task\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\"\n" +
	"\rroom_table_id\x18\x03 \x01(\x03R\vroomTableId\x12\x10\n" +
	"\x03sid\x18\x04 \x01(\tR\x03sid\x12\x1e\n" +
	"\brtmp_url\x18\x05 \x01(\tH\x00R\artmpUrl\x88\x01\x01\x12(\n" +
	"\rcustom_design\x18\x06 \x01(\tH\x01R\fcustomDesign\x88\x01\x01B\v\n" +
	"\t_rtmp_urlB\x10\n" +
	"\x0e_custom_design\"\xfa\x02\n" +
	"\x11RecordingInfoFile\x12\"\n" +
	"\rroom_table_id\x18\x01 \x01(\x03R\vroomTableId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"room_title\x18\x03 \x01(\tR\troomTitle\x12\x19\n" +
	"\broom_sid\x18\x04 \x01(\tR\aroomSid\x12,\n" +
	"\x12room_creation_time\x18\x05 \x01(\x03R\x10roomCreationTime\x12\x1d\n" +
	"\n" +
	"room_ended\x18\x06 \x01(\x03R\troomEnded\x12!\n" +
	"\frecording_id\x18\a \x01(\tR\vrecordingId\x12\x1f\n" +
	"\vrecorder_id\x18\b \x01(\tR\n" +
	"recorderId\x12\x1b\n" +
	"\tfile_path\x18\t \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_size\x18\n" +
	" \x01(\x02R\bfileSize\x12#\n" +
	"\rcreation_time\x18\v \x01(\x03R\fcreationTimeB\xa0\x01\n" +
	"\rcom.plugnmeetB\x17PlugnmeetRecordingProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_recording_proto_rawDescOnce sync.Once
	file_plugnmeet_recording_proto_rawDescData []byte
)

func file_plugnmeet_recording_proto_rawDescGZIP() []byte {
	file_plugnmeet_recording_proto_rawDescOnce.Do(func() {
		file_plugnmeet_recording_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_recording_proto_rawDesc), len(file_plugnmeet_recording_proto_rawDesc)))
	})
	return file_plugnmeet_recording_proto_rawDescData
}

var file_plugnmeet_recording_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_plugnmeet_recording_proto_goTypes = []any{
	(*RecordingReq)(nil),      // 0: plugnmeet.RecordingReq
	(*RecordingInfoFile)(nil), // 1: plugnmeet.RecordingInfoFile
	(RecordingTasks)(0),       // 2: plugnmeet.RecordingTasks
}
var file_plugnmeet_recording_proto_depIdxs = []int32{
	2, // 0: plugnmeet.RecordingReq.task:type_name -> plugnmeet.RecordingTasks
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plugnmeet_recording_proto_init() }
func file_plugnmeet_recording_proto_init() {
	if File_plugnmeet_recording_proto != nil {
		return
	}
	file_plugnmeet_recorder_proto_init()
	file_plugnmeet_recording_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_recording_proto_rawDesc), len(file_plugnmeet_recording_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_recording_proto_goTypes,
		DependencyIndexes: file_plugnmeet_recording_proto_depIdxs,
		MessageInfos:      file_plugnmeet_recording_proto_msgTypes,
	}.Build()
	File_plugnmeet_recording_proto = out.File
	file_plugnmeet_recording_proto_goTypes = nil
	file_plugnmeet_recording_proto_depIdxs = nil
}
