// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: plugnmeet_nats_msg.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NatsMsgServerToClientEvents int32

const (
	// initial data
	NatsMsgServerToClientEvents_RES_INITIAL_DATA                     NatsMsgServerToClientEvents = 0
	NatsMsgServerToClientEvents_RES_JOINED_USERS_LIST                NatsMsgServerToClientEvents = 1
	NatsMsgServerToClientEvents_ROOM_METADATA_UPDATE                 NatsMsgServerToClientEvents = 2
	NatsMsgServerToClientEvents_USER_METADATA_UPDATE                 NatsMsgServerToClientEvents = 3
	NatsMsgServerToClientEvents_USER_JOINED                          NatsMsgServerToClientEvents = 4
	NatsMsgServerToClientEvents_USER_DISCONNECTED                    NatsMsgServerToClientEvents = 5
	NatsMsgServerToClientEvents_USER_OFFLINE                         NatsMsgServerToClientEvents = 6
	NatsMsgServerToClientEvents_RESP_RENEW_PNM_TOKEN                 NatsMsgServerToClientEvents = 7
	NatsMsgServerToClientEvents_SYSTEM_NOTIFICATION                  NatsMsgServerToClientEvents = 8
	NatsMsgServerToClientEvents_AZURE_COGNITIVE_SERVICE_SPEECH_TOKEN NatsMsgServerToClientEvents = 9
	NatsMsgServerToClientEvents_SESSION_ENDED                        NatsMsgServerToClientEvents = 10
	NatsMsgServerToClientEvents_POLL_CLOSED                          NatsMsgServerToClientEvents = 11
	NatsMsgServerToClientEvents_POLL_CREATED                         NatsMsgServerToClientEvents = 12
	NatsMsgServerToClientEvents_JOIN_BREAKOUT_ROOM                   NatsMsgServerToClientEvents = 13
	NatsMsgServerToClientEvents_BREAKOUT_ROOM_ENDED                  NatsMsgServerToClientEvents = 15
	NatsMsgServerToClientEvents_SYSTEM_CHAT_MSG                      NatsMsgServerToClientEvents = 14 // mostly system message display in chat
)

// Enum value maps for NatsMsgServerToClientEvents.
var (
	NatsMsgServerToClientEvents_name = map[int32]string{
		0:  "RES_INITIAL_DATA",
		1:  "RES_JOINED_USERS_LIST",
		2:  "ROOM_METADATA_UPDATE",
		3:  "USER_METADATA_UPDATE",
		4:  "USER_JOINED",
		5:  "USER_DISCONNECTED",
		6:  "USER_OFFLINE",
		7:  "RESP_RENEW_PNM_TOKEN",
		8:  "SYSTEM_NOTIFICATION",
		9:  "AZURE_COGNITIVE_SERVICE_SPEECH_TOKEN",
		10: "SESSION_ENDED",
		11: "POLL_CLOSED",
		12: "POLL_CREATED",
		13: "JOIN_BREAKOUT_ROOM",
		15: "BREAKOUT_ROOM_ENDED",
		14: "SYSTEM_CHAT_MSG",
	}
	NatsMsgServerToClientEvents_value = map[string]int32{
		"RES_INITIAL_DATA":                     0,
		"RES_JOINED_USERS_LIST":                1,
		"ROOM_METADATA_UPDATE":                 2,
		"USER_METADATA_UPDATE":                 3,
		"USER_JOINED":                          4,
		"USER_DISCONNECTED":                    5,
		"USER_OFFLINE":                         6,
		"RESP_RENEW_PNM_TOKEN":                 7,
		"SYSTEM_NOTIFICATION":                  8,
		"AZURE_COGNITIVE_SERVICE_SPEECH_TOKEN": 9,
		"SESSION_ENDED":                        10,
		"POLL_CLOSED":                          11,
		"POLL_CREATED":                         12,
		"JOIN_BREAKOUT_ROOM":                   13,
		"BREAKOUT_ROOM_ENDED":                  15,
		"SYSTEM_CHAT_MSG":                      14,
	}
)

func (x NatsMsgServerToClientEvents) Enum() *NatsMsgServerToClientEvents {
	p := new(NatsMsgServerToClientEvents)
	*p = x
	return p
}

func (x NatsMsgServerToClientEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatsMsgServerToClientEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_nats_msg_proto_enumTypes[0].Descriptor()
}

func (NatsMsgServerToClientEvents) Type() protoreflect.EnumType {
	return &file_plugnmeet_nats_msg_proto_enumTypes[0]
}

func (x NatsMsgServerToClientEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NatsMsgServerToClientEvents.Descriptor instead.
func (NatsMsgServerToClientEvents) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{0}
}

type NatsMsgClientToServerEvents int32

const (
	NatsMsgClientToServerEvents_REQ_INITIAL_DATA          NatsMsgClientToServerEvents = 0
	NatsMsgClientToServerEvents_REQ_JOINED_USERS_LIST     NatsMsgClientToServerEvents = 1
	NatsMsgClientToServerEvents_REQ_RENEW_PNM_TOKEN       NatsMsgClientToServerEvents = 2
	NatsMsgClientToServerEvents_PING                      NatsMsgClientToServerEvents = 3
	NatsMsgClientToServerEvents_REQ_RAISE_HAND            NatsMsgClientToServerEvents = 4
	NatsMsgClientToServerEvents_REQ_LOWER_HAND            NatsMsgClientToServerEvents = 5
	NatsMsgClientToServerEvents_REQ_LOWER_OTHER_USER_HAND NatsMsgClientToServerEvents = 6
	NatsMsgClientToServerEvents_PUSH_ANALYTICS_DATA       NatsMsgClientToServerEvents = 7
)

// Enum value maps for NatsMsgClientToServerEvents.
var (
	NatsMsgClientToServerEvents_name = map[int32]string{
		0: "REQ_INITIAL_DATA",
		1: "REQ_JOINED_USERS_LIST",
		2: "REQ_RENEW_PNM_TOKEN",
		3: "PING",
		4: "REQ_RAISE_HAND",
		5: "REQ_LOWER_HAND",
		6: "REQ_LOWER_OTHER_USER_HAND",
		7: "PUSH_ANALYTICS_DATA",
	}
	NatsMsgClientToServerEvents_value = map[string]int32{
		"REQ_INITIAL_DATA":          0,
		"REQ_JOINED_USERS_LIST":     1,
		"REQ_RENEW_PNM_TOKEN":       2,
		"PING":                      3,
		"REQ_RAISE_HAND":            4,
		"REQ_LOWER_HAND":            5,
		"REQ_LOWER_OTHER_USER_HAND": 6,
		"PUSH_ANALYTICS_DATA":       7,
	}
)

func (x NatsMsgClientToServerEvents) Enum() *NatsMsgClientToServerEvents {
	p := new(NatsMsgClientToServerEvents)
	*p = x
	return p
}

func (x NatsMsgClientToServerEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatsMsgClientToServerEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_nats_msg_proto_enumTypes[1].Descriptor()
}

func (NatsMsgClientToServerEvents) Type() protoreflect.EnumType {
	return &file_plugnmeet_nats_msg_proto_enumTypes[1]
}

func (x NatsMsgClientToServerEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NatsMsgClientToServerEvents.Descriptor instead.
func (NatsMsgClientToServerEvents) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{1}
}

type NatsSystemNotificationTypes int32

const (
	NatsSystemNotificationTypes_NATS_SYSTEM_NOTIFICATION_INFO    NatsSystemNotificationTypes = 0
	NatsSystemNotificationTypes_NATS_SYSTEM_NOTIFICATION_WARNING NatsSystemNotificationTypes = 1
	NatsSystemNotificationTypes_NATS_SYSTEM_NOTIFICATION_ERROR   NatsSystemNotificationTypes = 2
)

// Enum value maps for NatsSystemNotificationTypes.
var (
	NatsSystemNotificationTypes_name = map[int32]string{
		0: "NATS_SYSTEM_NOTIFICATION_INFO",
		1: "NATS_SYSTEM_NOTIFICATION_WARNING",
		2: "NATS_SYSTEM_NOTIFICATION_ERROR",
	}
	NatsSystemNotificationTypes_value = map[string]int32{
		"NATS_SYSTEM_NOTIFICATION_INFO":    0,
		"NATS_SYSTEM_NOTIFICATION_WARNING": 1,
		"NATS_SYSTEM_NOTIFICATION_ERROR":   2,
	}
)

func (x NatsSystemNotificationTypes) Enum() *NatsSystemNotificationTypes {
	p := new(NatsSystemNotificationTypes)
	*p = x
	return p
}

func (x NatsSystemNotificationTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatsSystemNotificationTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_nats_msg_proto_enumTypes[2].Descriptor()
}

func (NatsSystemNotificationTypes) Type() protoreflect.EnumType {
	return &file_plugnmeet_nats_msg_proto_enumTypes[2]
}

func (x NatsSystemNotificationTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NatsSystemNotificationTypes.Descriptor instead.
func (NatsSystemNotificationTypes) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{2}
}

type NatsSubjects struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SystemApiWorker string                 `protobuf:"bytes,1,opt,name=system_api_worker,json=systemApiWorker,proto3" json:"system_api_worker,omitempty"`
	SystemJsWorker  string                 `protobuf:"bytes,2,opt,name=system_js_worker,json=systemJsWorker,proto3" json:"system_js_worker,omitempty"`
	SystemPublic    string                 `protobuf:"bytes,3,opt,name=system_public,json=systemPublic,proto3" json:"system_public,omitempty"`
	SystemPrivate   string                 `protobuf:"bytes,4,opt,name=system_private,json=systemPrivate,proto3" json:"system_private,omitempty"`
	Chat            string                 `protobuf:"bytes,5,opt,name=chat,proto3" json:"chat,omitempty"`
	Whiteboard      string                 `protobuf:"bytes,6,opt,name=whiteboard,proto3" json:"whiteboard,omitempty"`
	DataChannel     string                 `protobuf:"bytes,7,opt,name=data_channel,json=dataChannel,proto3" json:"data_channel,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NatsSubjects) Reset() {
	*x = NatsSubjects{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsSubjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsSubjects) ProtoMessage() {}

func (x *NatsSubjects) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsSubjects.ProtoReflect.Descriptor instead.
func (*NatsSubjects) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{0}
}

func (x *NatsSubjects) GetSystemApiWorker() string {
	if x != nil {
		return x.SystemApiWorker
	}
	return ""
}

func (x *NatsSubjects) GetSystemJsWorker() string {
	if x != nil {
		return x.SystemJsWorker
	}
	return ""
}

func (x *NatsSubjects) GetSystemPublic() string {
	if x != nil {
		return x.SystemPublic
	}
	return ""
}

func (x *NatsSubjects) GetSystemPrivate() string {
	if x != nil {
		return x.SystemPrivate
	}
	return ""
}

func (x *NatsSubjects) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

func (x *NatsSubjects) GetWhiteboard() string {
	if x != nil {
		return x.Whiteboard
	}
	return ""
}

func (x *NatsSubjects) GetDataChannel() string {
	if x != nil {
		return x.DataChannel
	}
	return ""
}

type NatsMsgServerToClient struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event         NatsMsgServerToClientEvents `protobuf:"varint,2,opt,name=event,proto3,enum=plugnmeet.NatsMsgServerToClientEvents" json:"event,omitempty"`
	Msg           string                      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsMsgServerToClient) Reset() {
	*x = NatsMsgServerToClient{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsMsgServerToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsMsgServerToClient) ProtoMessage() {}

func (x *NatsMsgServerToClient) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsMsgServerToClient.ProtoReflect.Descriptor instead.
func (*NatsMsgServerToClient) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{1}
}

func (x *NatsMsgServerToClient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NatsMsgServerToClient) GetEvent() NatsMsgServerToClientEvents {
	if x != nil {
		return x.Event
	}
	return NatsMsgServerToClientEvents_RES_INITIAL_DATA
}

func (x *NatsMsgServerToClient) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type NatsMsgClientToServer struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event         NatsMsgClientToServerEvents `protobuf:"varint,2,opt,name=event,proto3,enum=plugnmeet.NatsMsgClientToServerEvents" json:"event,omitempty"`
	Msg           string                      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	BinMsg        []byte                      `protobuf:"bytes,4,opt,name=bin_msg,json=binMsg,proto3" json:"bin_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsMsgClientToServer) Reset() {
	*x = NatsMsgClientToServer{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsMsgClientToServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsMsgClientToServer) ProtoMessage() {}

func (x *NatsMsgClientToServer) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsMsgClientToServer.ProtoReflect.Descriptor instead.
func (*NatsMsgClientToServer) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{2}
}

func (x *NatsMsgClientToServer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NatsMsgClientToServer) GetEvent() NatsMsgClientToServerEvents {
	if x != nil {
		return x.Event
	}
	return NatsMsgClientToServerEvents_REQ_INITIAL_DATA
}

func (x *NatsMsgClientToServer) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NatsMsgClientToServer) GetBinMsg() []byte {
	if x != nil {
		return x.BinMsg
	}
	return nil
}

type NatsKvRoomInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DbTableId       uint64                 `protobuf:"varint,1,opt,name=db_table_id,json=dbTableId,proto3" json:"db_table_id,omitempty"`
	RoomId          string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomSid         string                 `protobuf:"bytes,3,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	Status          string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	EmptyTimeout    uint64                 `protobuf:"varint,5,opt,name=empty_timeout,json=emptyTimeout,proto3" json:"empty_timeout,omitempty"`
	MaxParticipants uint64                 `protobuf:"varint,6,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	Metadata        string                 `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt       uint64                 `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NatsKvRoomInfo) Reset() {
	*x = NatsKvRoomInfo{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsKvRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsKvRoomInfo) ProtoMessage() {}

func (x *NatsKvRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsKvRoomInfo.ProtoReflect.Descriptor instead.
func (*NatsKvRoomInfo) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{3}
}

func (x *NatsKvRoomInfo) GetDbTableId() uint64 {
	if x != nil {
		return x.DbTableId
	}
	return 0
}

func (x *NatsKvRoomInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NatsKvRoomInfo) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *NatsKvRoomInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NatsKvRoomInfo) GetEmptyTimeout() uint64 {
	if x != nil {
		return x.EmptyTimeout
	}
	return 0
}

func (x *NatsKvRoomInfo) GetMaxParticipants() uint64 {
	if x != nil {
		return x.MaxParticipants
	}
	return 0
}

func (x *NatsKvRoomInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *NatsKvRoomInfo) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type NatsKvUserInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserSid        string                 `protobuf:"bytes,2,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	RoomId         string                 `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsAdmin        bool                   `protobuf:"varint,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsPresenter    bool                   `protobuf:"varint,6,opt,name=is_presenter,json=isPresenter,proto3" json:"is_presenter,omitempty"`
	Metadata       string                 `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	JoinedAt       uint64                 `protobuf:"varint,8,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	ReconnectedAt  uint64                 `protobuf:"varint,9,opt,name=reconnected_at,json=reconnectedAt,proto3" json:"reconnected_at,omitempty"`
	DisconnectedAt uint64                 `protobuf:"varint,10,opt,name=disconnected_at,json=disconnectedAt,proto3" json:"disconnected_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NatsKvUserInfo) Reset() {
	*x = NatsKvUserInfo{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsKvUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsKvUserInfo) ProtoMessage() {}

func (x *NatsKvUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsKvUserInfo.ProtoReflect.Descriptor instead.
func (*NatsKvUserInfo) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{4}
}

func (x *NatsKvUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NatsKvUserInfo) GetUserSid() string {
	if x != nil {
		return x.UserSid
	}
	return ""
}

func (x *NatsKvUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NatsKvUserInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *NatsKvUserInfo) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *NatsKvUserInfo) GetIsPresenter() bool {
	if x != nil {
		return x.IsPresenter
	}
	return false
}

func (x *NatsKvUserInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *NatsKvUserInfo) GetJoinedAt() uint64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

func (x *NatsKvUserInfo) GetReconnectedAt() uint64 {
	if x != nil {
		return x.ReconnectedAt
	}
	return 0
}

func (x *NatsKvUserInfo) GetDisconnectedAt() uint64 {
	if x != nil {
		return x.DisconnectedAt
	}
	return 0
}

type MediaServerConnInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	EnabledE2Ee   bool                   `protobuf:"varint,3,opt,name=enabled_e2ee,json=enabledE2ee,proto3" json:"enabled_e2ee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaServerConnInfo) Reset() {
	*x = MediaServerConnInfo{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaServerConnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaServerConnInfo) ProtoMessage() {}

func (x *MediaServerConnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaServerConnInfo.ProtoReflect.Descriptor instead.
func (*MediaServerConnInfo) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{5}
}

func (x *MediaServerConnInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaServerConnInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MediaServerConnInfo) GetEnabledE2Ee() bool {
	if x != nil {
		return x.EnabledE2Ee
	}
	return false
}

type NatsInitialData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Room            *NatsKvRoomInfo        `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	LocalUser       *NatsKvUserInfo        `protobuf:"bytes,2,opt,name=local_user,json=localUser,proto3" json:"local_user,omitempty"`
	MediaServerInfo *MediaServerConnInfo   `protobuf:"bytes,3,opt,name=media_server_info,json=mediaServerInfo,proto3" json:"media_server_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NatsInitialData) Reset() {
	*x = NatsInitialData{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsInitialData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsInitialData) ProtoMessage() {}

func (x *NatsInitialData) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsInitialData.ProtoReflect.Descriptor instead.
func (*NatsInitialData) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{6}
}

func (x *NatsInitialData) GetRoom() *NatsKvRoomInfo {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *NatsInitialData) GetLocalUser() *NatsKvUserInfo {
	if x != nil {
		return x.LocalUser
	}
	return nil
}

func (x *NatsInitialData) GetMediaServerInfo() *MediaServerConnInfo {
	if x != nil {
		return x.MediaServerInfo
	}
	return nil
}

type NatsSystemNotification struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          NatsSystemNotificationTypes `protobuf:"varint,2,opt,name=type,proto3,enum=plugnmeet.NatsSystemNotificationTypes" json:"type,omitempty"`
	Msg           string                      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	SentAt        int64                       `protobuf:"varint,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	WithSound     bool                        `protobuf:"varint,5,opt,name=with_sound,json=withSound,proto3" json:"with_sound,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsSystemNotification) Reset() {
	*x = NatsSystemNotification{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsSystemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsSystemNotification) ProtoMessage() {}

func (x *NatsSystemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsSystemNotification.ProtoReflect.Descriptor instead.
func (*NatsSystemNotification) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{7}
}

func (x *NatsSystemNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NatsSystemNotification) GetType() NatsSystemNotificationTypes {
	if x != nil {
		return x.Type
	}
	return NatsSystemNotificationTypes_NATS_SYSTEM_NOTIFICATION_INFO
}

func (x *NatsSystemNotification) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NatsSystemNotification) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *NatsSystemNotification) GetWithSound() bool {
	if x != nil {
		return x.WithSound
	}
	return false
}

type NatsUserMetadataUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metadata      string                 `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsUserMetadataUpdate) Reset() {
	*x = NatsUserMetadataUpdate{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsUserMetadataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsUserMetadataUpdate) ProtoMessage() {}

func (x *NatsUserMetadataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsUserMetadataUpdate.ProtoReflect.Descriptor instead.
func (*NatsUserMetadataUpdate) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{8}
}

func (x *NatsUserMetadataUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NatsUserMetadataUpdate) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromName      string                 `protobuf:"bytes,2,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromUserId    string                 `protobuf:"bytes,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	SentAt        int64                  `protobuf:"varint,4,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	ToUserId      *string                `protobuf:"bytes,5,opt,name=to_user_id,json=toUserId,proto3,oneof" json:"to_user_id,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,6,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	FromAdmin     bool                   `protobuf:"varint,8,opt,name=from_admin,json=fromAdmin,proto3" json:"from_admin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_nats_msg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_plugnmeet_nats_msg_proto_rawDescGZIP(), []int{9}
}

func (x *ChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage) GetFromName() string {
	if x != nil {
		return x.FromName
	}
	return ""
}

func (x *ChatMessage) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *ChatMessage) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *ChatMessage) GetToUserId() string {
	if x != nil && x.ToUserId != nil {
		return *x.ToUserId
	}
	return ""
}

func (x *ChatMessage) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetFromAdmin() bool {
	if x != nil {
		return x.FromAdmin
	}
	return false
}

var File_plugnmeet_nats_msg_proto protoreflect.FileDescriptor

const file_plugnmeet_nats_msg_proto_rawDesc = "" +
	"\n" +
	"\x18plugnmeet_nats_msg.proto\x12\tplugnmeet\"\x87\x02\n" +
	"\fNatsSubjects\x12*\n" +
	"\x11system_api_worker\x18\x01 \x01(\tR\x0fsystemApiWorker\x12(\n" +
	"\x10system_js_worker\x18\x02 \x01(\tR\x0esystemJsWorker\x12#\n" +
	"\rsystem_public\x18\x03 \x01(\tR\fsystemPublic\x12%\n" +
	"\x0esystem_private\x18\x04 \x01(\tR\rsystemPrivate\x12\x12\n" +
	"\x04chat\x18\x05 \x01(\tR\x04chat\x12\x1e\n" +
	"\n" +
	"whiteboard\x18\x06 \x01(\tR\n" +
	"whiteboard\x12!\n" +
	"\fdata_channel\x18\a \x01(\tR\vdataChannel\"w\n" +
	"\x15NatsMsgServerToClient\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12<\n" +
	"\x05event\x18\x02 \x01(\x0e2&.plugnmeet.NatsMsgServerToClientEventsR\x05event\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\"\x90\x01\n" +
	"\x15NatsMsgClientToServer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12<\n" +
	"\x05event\x18\x02 \x01(\x0e2&.plugnmeet.NatsMsgClientToServerEventsR\x05event\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12\x17\n" +
	"\abin_msg\x18\x04 \x01(\fR\x06binMsg\"\x87\x02\n" +
	"\x0eNatsKvRoomInfo\x12\x1e\n" +
	"\vdb_table_id\x18\x01 \x01(\x04R\tdbTableId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x19\n" +
	"\broom_sid\x18\x03 \x01(\tR\aroomSid\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rempty_timeout\x18\x05 \x01(\x04R\femptyTimeout\x12)\n" +
	"\x10max_participants\x18\x06 \x01(\x04R\x0fmaxParticipants\x12\x1a\n" +
	"\bmetadata\x18\a \x01(\tR\bmetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x04R\tcreatedAt\"\xb8\x02\n" +
	"\x0eNatsKvUserInfo\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\buser_sid\x18\x02 \x01(\tR\auserSid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x17\n" +
	"\aroom_id\x18\x04 \x01(\tR\x06roomId\x12\x19\n" +
	"\bis_admin\x18\x05 \x01(\bR\aisAdmin\x12!\n" +
	"\fis_presenter\x18\x06 \x01(\bR\visPresenter\x12\x1a\n" +
	"\bmetadata\x18\a \x01(\tR\bmetadata\x12\x1b\n" +
	"\tjoined_at\x18\b \x01(\x04R\bjoinedAt\x12%\n" +
	"\x0ereconnected_at\x18\t \x01(\x04R\rreconnectedAt\x12'\n" +
	"\x0fdisconnected_at\x18\n" +
	" \x01(\x04R\x0edisconnectedAt\"`\n" +
	"\x13MediaServerConnInfo\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12!\n" +
	"\fenabled_e2ee\x18\x03 \x01(\bR\venabledE2ee\"\xc6\x01\n" +
	"\x0fNatsInitialData\x12-\n" +
	"\x04room\x18\x01 \x01(\v2\x19.plugnmeet.NatsKvRoomInfoR\x04room\x128\n" +
	"\n" +
	"local_user\x18\x02 \x01(\v2\x19.plugnmeet.NatsKvUserInfoR\tlocalUser\x12J\n" +
	"\x11media_server_info\x18\x03 \x01(\v2\x1e.plugnmeet.MediaServerConnInfoR\x0fmediaServerInfo\"\xae\x01\n" +
	"\x16NatsSystemNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.plugnmeet.NatsSystemNotificationTypesR\x04type\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12\x17\n" +
	"\asent_at\x18\x04 \x01(\x03R\x06sentAt\x12\x1d\n" +
	"\n" +
	"with_sound\x18\x05 \x01(\bR\twithSound\"M\n" +
	"\x16NatsUserMetadataUpdate\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bmetadata\x18\x02 \x01(\tR\bmetadata\"\xff\x01\n" +
	"\vChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfrom_name\x18\x02 \x01(\tR\bfromName\x12 \n" +
	"\ffrom_user_id\x18\x03 \x01(\tR\n" +
	"fromUserId\x12\x17\n" +
	"\asent_at\x18\x04 \x01(\x03R\x06sentAt\x12!\n" +
	"\n" +
	"to_user_id\x18\x05 \x01(\tH\x00R\btoUserId\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"is_private\x18\x06 \x01(\bR\tisPrivate\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"from_admin\x18\b \x01(\bR\tfromAdminB\r\n" +
	"\v_to_user_id*\x95\x03\n" +
	"\x1bNatsMsgServerToClientEvents\x12\x14\n" +
	"\x10RES_INITIAL_DATA\x10\x00\x12\x19\n" +
	"\x15RES_JOINED_USERS_LIST\x10\x01\x12\x18\n" +
	"\x14ROOM_METADATA_UPDATE\x10\x02\x12\x18\n" +
	"\x14USER_METADATA_UPDATE\x10\x03\x12\x0f\n" +
	"\vUSER_JOINED\x10\x04\x12\x15\n" +
	"\x11USER_DISCONNECTED\x10\x05\x12\x10\n" +
	"\fUSER_OFFLINE\x10\x06\x12\x18\n" +
	"\x14RESP_RENEW_PNM_TOKEN\x10\a\x12\x17\n" +
	"\x13SYSTEM_NOTIFICATION\x10\b\x12(\n" +
	"$AZURE_COGNITIVE_SERVICE_SPEECH_TOKEN\x10\t\x12\x11\n" +
	"\rSESSION_ENDED\x10\n" +
	"\x12\x0f\n" +
	"\vPOLL_CLOSED\x10\v\x12\x10\n" +
	"\fPOLL_CREATED\x10\f\x12\x16\n" +
	"\x12JOIN_BREAKOUT_ROOM\x10\r\x12\x17\n" +
	"\x13BREAKOUT_ROOM_ENDED\x10\x0f\x12\x13\n" +
	"\x0fSYSTEM_CHAT_MSG\x10\x0e*\xd1\x01\n" +
	"\x1bNatsMsgClientToServerEvents\x12\x14\n" +
	"\x10REQ_INITIAL_DATA\x10\x00\x12\x19\n" +
	"\x15REQ_JOINED_USERS_LIST\x10\x01\x12\x17\n" +
	"\x13REQ_RENEW_PNM_TOKEN\x10\x02\x12\b\n" +
	"\x04PING\x10\x03\x12\x12\n" +
	"\x0eREQ_RAISE_HAND\x10\x04\x12\x12\n" +
	"\x0eREQ_LOWER_HAND\x10\x05\x12\x1d\n" +
	"\x19REQ_LOWER_OTHER_USER_HAND\x10\x06\x12\x17\n" +
	"\x13PUSH_ANALYTICS_DATA\x10\a*\x8a\x01\n" +
	"\x1bNatsSystemNotificationTypes\x12!\n" +
	"\x1dNATS_SYSTEM_NOTIFICATION_INFO\x10\x00\x12$\n" +
	" NATS_SYSTEM_NOTIFICATION_WARNING\x10\x01\x12\"\n" +
	"\x1eNATS_SYSTEM_NOTIFICATION_ERROR\x10\x02B\x9e\x01\n" +
	"\rcom.plugnmeetB\x15PlugnmeetNatsMsgProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_nats_msg_proto_rawDescOnce sync.Once
	file_plugnmeet_nats_msg_proto_rawDescData []byte
)

func file_plugnmeet_nats_msg_proto_rawDescGZIP() []byte {
	file_plugnmeet_nats_msg_proto_rawDescOnce.Do(func() {
		file_plugnmeet_nats_msg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_nats_msg_proto_rawDesc), len(file_plugnmeet_nats_msg_proto_rawDesc)))
	})
	return file_plugnmeet_nats_msg_proto_rawDescData
}

var file_plugnmeet_nats_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plugnmeet_nats_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_plugnmeet_nats_msg_proto_goTypes = []any{
	(NatsMsgServerToClientEvents)(0), // 0: plugnmeet.NatsMsgServerToClientEvents
	(NatsMsgClientToServerEvents)(0), // 1: plugnmeet.NatsMsgClientToServerEvents
	(NatsSystemNotificationTypes)(0), // 2: plugnmeet.NatsSystemNotificationTypes
	(*NatsSubjects)(nil),             // 3: plugnmeet.NatsSubjects
	(*NatsMsgServerToClient)(nil),    // 4: plugnmeet.NatsMsgServerToClient
	(*NatsMsgClientToServer)(nil),    // 5: plugnmeet.NatsMsgClientToServer
	(*NatsKvRoomInfo)(nil),           // 6: plugnmeet.NatsKvRoomInfo
	(*NatsKvUserInfo)(nil),           // 7: plugnmeet.NatsKvUserInfo
	(*MediaServerConnInfo)(nil),      // 8: plugnmeet.MediaServerConnInfo
	(*NatsInitialData)(nil),          // 9: plugnmeet.NatsInitialData
	(*NatsSystemNotification)(nil),   // 10: plugnmeet.NatsSystemNotification
	(*NatsUserMetadataUpdate)(nil),   // 11: plugnmeet.NatsUserMetadataUpdate
	(*ChatMessage)(nil),              // 12: plugnmeet.ChatMessage
}
var file_plugnmeet_nats_msg_proto_depIdxs = []int32{
	0, // 0: plugnmeet.NatsMsgServerToClient.event:type_name -> plugnmeet.NatsMsgServerToClientEvents
	1, // 1: plugnmeet.NatsMsgClientToServer.event:type_name -> plugnmeet.NatsMsgClientToServerEvents
	6, // 2: plugnmeet.NatsInitialData.room:type_name -> plugnmeet.NatsKvRoomInfo
	7, // 3: plugnmeet.NatsInitialData.local_user:type_name -> plugnmeet.NatsKvUserInfo
	8, // 4: plugnmeet.NatsInitialData.media_server_info:type_name -> plugnmeet.MediaServerConnInfo
	2, // 5: plugnmeet.NatsSystemNotification.type:type_name -> plugnmeet.NatsSystemNotificationTypes
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_plugnmeet_nats_msg_proto_init() }
func file_plugnmeet_nats_msg_proto_init() {
	if File_plugnmeet_nats_msg_proto != nil {
		return
	}
	file_plugnmeet_nats_msg_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_nats_msg_proto_rawDesc), len(file_plugnmeet_nats_msg_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_nats_msg_proto_goTypes,
		DependencyIndexes: file_plugnmeet_nats_msg_proto_depIdxs,
		EnumInfos:         file_plugnmeet_nats_msg_proto_enumTypes,
		MessageInfos:      file_plugnmeet_nats_msg_proto_msgTypes,
	}.Build()
	File_plugnmeet_nats_msg_proto = out.File
	file_plugnmeet_nats_msg_proto_goTypes = nil
	file_plugnmeet_nats_msg_proto_depIdxs = nil
}
