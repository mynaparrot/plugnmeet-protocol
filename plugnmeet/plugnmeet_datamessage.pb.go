// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: plugnmeet_datamessage.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataMsgBodyType int32

const (
	// SYSTEM type
	DataMsgBodyType_UNKNOWN                      DataMsgBodyType = 0
	DataMsgBodyType_FILE_UPLOAD                  DataMsgBodyType = 1
	DataMsgBodyType_INFO                         DataMsgBodyType = 2
	DataMsgBodyType_ALERT                        DataMsgBodyType = 3
	DataMsgBodyType_USER_VISIBILITY_CHANGE       DataMsgBodyType = 4
	DataMsgBodyType_EXTERNAL_MEDIA_PLAYER_EVENTS DataMsgBodyType = 5
	DataMsgBodyType_NEW_POLL_RESPONSE            DataMsgBodyType = 6
	DataMsgBodyType_SPEECH_SUBTITLE_TEXT         DataMsgBodyType = 7
	// WHITEBOARD type
	DataMsgBodyType_REQ_FULL_WHITEBOARD_DATA    DataMsgBodyType = 8
	DataMsgBodyType_RES_FULL_WHITEBOARD_DATA    DataMsgBodyType = 9
	DataMsgBodyType_SCENE_UPDATE                DataMsgBodyType = 10
	DataMsgBodyType_POINTER_UPDATE              DataMsgBodyType = 11
	DataMsgBodyType_WHITEBOARD_APP_STATE_CHANGE DataMsgBodyType = 12
	DataMsgBodyType_ADD_WHITEBOARD_FILE         DataMsgBodyType = 13
	DataMsgBodyType_ADD_WHITEBOARD_OFFICE_FILE  DataMsgBodyType = 14
	DataMsgBodyType_PAGE_CHANGE                 DataMsgBodyType = 15
)

// Enum value maps for DataMsgBodyType.
var (
	DataMsgBodyType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FILE_UPLOAD",
		2:  "INFO",
		3:  "ALERT",
		4:  "USER_VISIBILITY_CHANGE",
		5:  "EXTERNAL_MEDIA_PLAYER_EVENTS",
		6:  "NEW_POLL_RESPONSE",
		7:  "SPEECH_SUBTITLE_TEXT",
		8:  "REQ_FULL_WHITEBOARD_DATA",
		9:  "RES_FULL_WHITEBOARD_DATA",
		10: "SCENE_UPDATE",
		11: "POINTER_UPDATE",
		12: "WHITEBOARD_APP_STATE_CHANGE",
		13: "ADD_WHITEBOARD_FILE",
		14: "ADD_WHITEBOARD_OFFICE_FILE",
		15: "PAGE_CHANGE",
	}
	DataMsgBodyType_value = map[string]int32{
		"UNKNOWN":                      0,
		"FILE_UPLOAD":                  1,
		"INFO":                         2,
		"ALERT":                        3,
		"USER_VISIBILITY_CHANGE":       4,
		"EXTERNAL_MEDIA_PLAYER_EVENTS": 5,
		"NEW_POLL_RESPONSE":            6,
		"SPEECH_SUBTITLE_TEXT":         7,
		"REQ_FULL_WHITEBOARD_DATA":     8,
		"RES_FULL_WHITEBOARD_DATA":     9,
		"SCENE_UPDATE":                 10,
		"POINTER_UPDATE":               11,
		"WHITEBOARD_APP_STATE_CHANGE":  12,
		"ADD_WHITEBOARD_FILE":          13,
		"ADD_WHITEBOARD_OFFICE_FILE":   14,
		"PAGE_CHANGE":                  15,
	}
)

func (x DataMsgBodyType) Enum() *DataMsgBodyType {
	p := new(DataMsgBodyType)
	*p = x
	return p
}

func (x DataMsgBodyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataMsgBodyType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_datamessage_proto_enumTypes[0].Descriptor()
}

func (DataMsgBodyType) Type() protoreflect.EnumType {
	return &file_plugnmeet_datamessage_proto_enumTypes[0]
}

func (x DataMsgBodyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataMsgBodyType.Descriptor instead.
func (DataMsgBodyType) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_datamessage_proto_rawDescGZIP(), []int{0}
}

type DataChannelMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          DataMsgBodyType        `protobuf:"varint,2,opt,name=type,proto3,enum=plugnmeet.DataMsgBodyType" json:"type,omitempty"`
	FromUserId    string                 `protobuf:"bytes,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      *string                `protobuf:"bytes,4,opt,name=to_user_id,json=toUserId,proto3,oneof" json:"to_user_id,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChannelMessage) Reset() {
	*x = DataChannelMessage{}
	mi := &file_plugnmeet_datamessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChannelMessage) ProtoMessage() {}

func (x *DataChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_datamessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChannelMessage.ProtoReflect.Descriptor instead.
func (*DataChannelMessage) Descriptor() ([]byte, []int) {
	return file_plugnmeet_datamessage_proto_rawDescGZIP(), []int{0}
}

func (x *DataChannelMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataChannelMessage) GetType() DataMsgBodyType {
	if x != nil {
		return x.Type
	}
	return DataMsgBodyType_UNKNOWN
}

func (x *DataChannelMessage) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *DataChannelMessage) GetToUserId() string {
	if x != nil && x.ToUserId != nil {
		return *x.ToUserId
	}
	return ""
}

func (x *DataChannelMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_plugnmeet_datamessage_proto protoreflect.FileDescriptor

const file_plugnmeet_datamessage_proto_rawDesc = "" +
	"\n" +
	"\x1bplugnmeet_datamessage.proto\x12\tplugnmeet\"\xc2\x01\n" +
	"\x12DataChannelMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1a.plugnmeet.DataMsgBodyTypeR\x04type\x12 \n" +
	"\ffrom_user_id\x18\x03 \x01(\tR\n" +
	"fromUserId\x12!\n" +
	"\n" +
	"to_user_id\x18\x04 \x01(\tH\x00R\btoUserId\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessageB\r\n" +
	"\v_to_user_id*\x80\x03\n" +
	"\x0fDataMsgBodyType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x0f\n" +
	"\vFILE_UPLOAD\x10\x01\x12\b\n" +
	"\x04INFO\x10\x02\x12\t\n" +
	"\x05ALERT\x10\x03\x12\x1a\n" +
	"\x16USER_VISIBILITY_CHANGE\x10\x04\x12 \n" +
	"\x1cEXTERNAL_MEDIA_PLAYER_EVENTS\x10\x05\x12\x15\n" +
	"\x11NEW_POLL_RESPONSE\x10\x06\x12\x18\n" +
	"\x14SPEECH_SUBTITLE_TEXT\x10\a\x12\x1c\n" +
	"\x18REQ_FULL_WHITEBOARD_DATA\x10\b\x12\x1c\n" +
	"\x18RES_FULL_WHITEBOARD_DATA\x10\t\x12\x10\n" +
	"\fSCENE_UPDATE\x10\n" +
	"\x12\x12\n" +
	"\x0ePOINTER_UPDATE\x10\v\x12\x1f\n" +
	"\x1bWHITEBOARD_APP_STATE_CHANGE\x10\f\x12\x17\n" +
	"\x13ADD_WHITEBOARD_FILE\x10\r\x12\x1e\n" +
	"\x1aADD_WHITEBOARD_OFFICE_FILE\x10\x0e\x12\x0f\n" +
	"\vPAGE_CHANGE\x10\x0fB\xa2\x01\n" +
	"\rcom.plugnmeetB\x19PlugnmeetDatamessageProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_datamessage_proto_rawDescOnce sync.Once
	file_plugnmeet_datamessage_proto_rawDescData []byte
)

func file_plugnmeet_datamessage_proto_rawDescGZIP() []byte {
	file_plugnmeet_datamessage_proto_rawDescOnce.Do(func() {
		file_plugnmeet_datamessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_datamessage_proto_rawDesc), len(file_plugnmeet_datamessage_proto_rawDesc)))
	})
	return file_plugnmeet_datamessage_proto_rawDescData
}

var file_plugnmeet_datamessage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plugnmeet_datamessage_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_plugnmeet_datamessage_proto_goTypes = []any{
	(DataMsgBodyType)(0),       // 0: plugnmeet.DataMsgBodyType
	(*DataChannelMessage)(nil), // 1: plugnmeet.DataChannelMessage
}
var file_plugnmeet_datamessage_proto_depIdxs = []int32{
	0, // 0: plugnmeet.DataChannelMessage.type:type_name -> plugnmeet.DataMsgBodyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plugnmeet_datamessage_proto_init() }
func file_plugnmeet_datamessage_proto_init() {
	if File_plugnmeet_datamessage_proto != nil {
		return
	}
	file_plugnmeet_datamessage_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_datamessage_proto_rawDesc), len(file_plugnmeet_datamessage_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_datamessage_proto_goTypes,
		DependencyIndexes: file_plugnmeet_datamessage_proto_depIdxs,
		EnumInfos:         file_plugnmeet_datamessage_proto_enumTypes,
		MessageInfos:      file_plugnmeet_datamessage_proto_msgTypes,
	}.Build()
	File_plugnmeet_datamessage_proto = out.File
	file_plugnmeet_datamessage_proto_goTypes = nil
	file_plugnmeet_datamessage_proto_depIdxs = nil
}
