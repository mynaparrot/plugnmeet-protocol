// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: plugnmeet_common_api.proto

package plugnmeet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwitchPresenterTask int32

const (
	SwitchPresenterTask_PROMOTE SwitchPresenterTask = 0
	SwitchPresenterTask_DEMOTE  SwitchPresenterTask = 1
)

// Enum value maps for SwitchPresenterTask.
var (
	SwitchPresenterTask_name = map[int32]string{
		0: "PROMOTE",
		1: "DEMOTE",
	}
	SwitchPresenterTask_value = map[string]int32{
		"PROMOTE": 0,
		"DEMOTE":  1,
	}
)

func (x SwitchPresenterTask) Enum() *SwitchPresenterTask {
	p := new(SwitchPresenterTask)
	*p = x
	return p
}

func (x SwitchPresenterTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwitchPresenterTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[0].Descriptor()
}

func (SwitchPresenterTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[0]
}

func (x SwitchPresenterTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwitchPresenterTask.Descriptor instead.
func (SwitchPresenterTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{0}
}

type ExternalMediaPlayerTask int32

const (
	ExternalMediaPlayerTask_START_PLAYBACK ExternalMediaPlayerTask = 0
	ExternalMediaPlayerTask_END_PLAYBACK   ExternalMediaPlayerTask = 1
)

// Enum value maps for ExternalMediaPlayerTask.
var (
	ExternalMediaPlayerTask_name = map[int32]string{
		0: "START_PLAYBACK",
		1: "END_PLAYBACK",
	}
	ExternalMediaPlayerTask_value = map[string]int32{
		"START_PLAYBACK": 0,
		"END_PLAYBACK":   1,
	}
)

func (x ExternalMediaPlayerTask) Enum() *ExternalMediaPlayerTask {
	p := new(ExternalMediaPlayerTask)
	*p = x
	return p
}

func (x ExternalMediaPlayerTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalMediaPlayerTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[1].Descriptor()
}

func (ExternalMediaPlayerTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[1]
}

func (x ExternalMediaPlayerTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalMediaPlayerTask.Descriptor instead.
func (ExternalMediaPlayerTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{1}
}

type ExternalDisplayLinkTask int32

const (
	ExternalDisplayLinkTask_START_EXTERNAL_LINK ExternalDisplayLinkTask = 0
	ExternalDisplayLinkTask_STOP_EXTERNAL_LINK  ExternalDisplayLinkTask = 1
)

// Enum value maps for ExternalDisplayLinkTask.
var (
	ExternalDisplayLinkTask_name = map[int32]string{
		0: "START_EXTERNAL_LINK",
		1: "STOP_EXTERNAL_LINK",
	}
	ExternalDisplayLinkTask_value = map[string]int32{
		"START_EXTERNAL_LINK": 0,
		"STOP_EXTERNAL_LINK":  1,
	}
)

func (x ExternalDisplayLinkTask) Enum() *ExternalDisplayLinkTask {
	p := new(ExternalDisplayLinkTask)
	*p = x
	return p
}

func (x ExternalDisplayLinkTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalDisplayLinkTask) Descriptor() protoreflect.EnumDescriptor {
	return file_plugnmeet_common_api_proto_enumTypes[2].Descriptor()
}

func (ExternalDisplayLinkTask) Type() protoreflect.EnumType {
	return &file_plugnmeet_common_api_proto_enumTypes[2]
}

func (x ExternalDisplayLinkTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalDisplayLinkTask.Descriptor instead.
func (ExternalDisplayLinkTask) EnumDescriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{2}
}

type CommonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type VerifyTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsProduction  *bool                  `protobuf:"varint,1,opt,name=is_production,json=isProduction,proto3,oneof" json:"is_production,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyTokenReq) Reset() {
	*x = VerifyTokenReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReq) ProtoMessage() {}

func (x *VerifyTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyTokenReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{1}
}

func (x *VerifyTokenReq) GetIsProduction() bool {
	if x != nil && x.IsProduction != nil {
		return *x.IsProduction
	}
	return false
}

type VerifyTokenRes struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Status                         bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                            string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NatsWsUrls                     []string               `protobuf:"bytes,3,rep,name=nats_ws_urls,json=natsWsUrls,proto3" json:"nats_ws_urls,omitempty"`
	ServerVersion                  *string                `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3,oneof" json:"server_version,omitempty"`
	RoomId                         *string                `protobuf:"bytes,5,opt,name=room_id,json=roomId,proto3,oneof" json:"room_id,omitempty"`
	UserId                         *string                `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	NatsSubjects                   *NatsSubjects          `protobuf:"bytes,7,opt,name=nats_subjects,json=natsSubjects,proto3,oneof" json:"nats_subjects,omitempty"`
	EnabledSelfInsertEncryptionKey *bool                  `protobuf:"varint,8,opt,name=enabled_self_insert_encryption_key,json=enabledSelfInsertEncryptionKey,proto3,oneof" json:"enabled_self_insert_encryption_key,omitempty"`
	IsCloud                        *bool                  `protobuf:"varint,9,opt,name=is_cloud,json=isCloud,proto3,oneof" json:"is_cloud,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *VerifyTokenRes) Reset() {
	*x = VerifyTokenRes{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenRes) ProtoMessage() {}

func (x *VerifyTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenRes.ProtoReflect.Descriptor instead.
func (*VerifyTokenRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyTokenRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *VerifyTokenRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VerifyTokenRes) GetNatsWsUrls() []string {
	if x != nil {
		return x.NatsWsUrls
	}
	return nil
}

func (x *VerifyTokenRes) GetServerVersion() string {
	if x != nil && x.ServerVersion != nil {
		return *x.ServerVersion
	}
	return ""
}

func (x *VerifyTokenRes) GetRoomId() string {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return ""
}

func (x *VerifyTokenRes) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *VerifyTokenRes) GetNatsSubjects() *NatsSubjects {
	if x != nil {
		return x.NatsSubjects
	}
	return nil
}

func (x *VerifyTokenRes) GetEnabledSelfInsertEncryptionKey() bool {
	if x != nil && x.EnabledSelfInsertEncryptionKey != nil {
		return *x.EnabledSelfInsertEncryptionKey
	}
	return false
}

func (x *VerifyTokenRes) GetIsCloud() bool {
	if x != nil && x.IsCloud != nil {
		return *x.IsCloud
	}
	return false
}

type MuteUnMuteTrackReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Sid             string                 `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RoomId          string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId          string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackSid        string                 `protobuf:"bytes,4,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	Muted           bool                   `protobuf:"varint,5,opt,name=muted,proto3" json:"muted,omitempty"`
	RequestedUserId string                 `protobuf:"bytes,6,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MuteUnMuteTrackReq) Reset() {
	*x = MuteUnMuteTrackReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MuteUnMuteTrackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUnMuteTrackReq) ProtoMessage() {}

func (x *MuteUnMuteTrackReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUnMuteTrackReq.ProtoReflect.Descriptor instead.
func (*MuteUnMuteTrackReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{3}
}

func (x *MuteUnMuteTrackReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetTrackSid() string {
	if x != nil {
		return x.TrackSid
	}
	return ""
}

func (x *MuteUnMuteTrackReq) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

func (x *MuteUnMuteTrackReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

type RemoveParticipantReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           string                 `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	BlockUser     bool                   `protobuf:"varint,5,opt,name=block_user,json=blockUser,proto3" json:"block_user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveParticipantReq) Reset() {
	*x = RemoveParticipantReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveParticipantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveParticipantReq) ProtoMessage() {}

func (x *RemoveParticipantReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveParticipantReq.ProtoReflect.Descriptor instead.
func (*RemoveParticipantReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveParticipantReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *RemoveParticipantReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RemoveParticipantReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveParticipantReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RemoveParticipantReq) GetBlockUser() bool {
	if x != nil {
		return x.BlockUser
	}
	return false
}

type DataMessageReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoomId          string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomSid         string                 `protobuf:"bytes,2,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	UserId          string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserSid         string                 `protobuf:"bytes,4,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	MsgBodyType     DataMsgBodyType        `protobuf:"varint,5,opt,name=msg_body_type,json=msgBodyType,proto3,enum=plugnmeet.DataMsgBodyType" json:"msg_body_type,omitempty"`
	Msg             string                 `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestedUserId string                 `protobuf:"bytes,7,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
	SendTo          []string               `protobuf:"bytes,8,rep,name=send_to,json=sendTo,proto3" json:"send_to,omitempty"`
	IsAdmin         bool                   `protobuf:"varint,9,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataMessageReq) Reset() {
	*x = DataMessageReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMessageReq) ProtoMessage() {}

func (x *DataMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMessageReq.ProtoReflect.Descriptor instead.
func (*DataMessageReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{5}
}

func (x *DataMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *DataMessageReq) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *DataMessageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DataMessageReq) GetUserSid() string {
	if x != nil {
		return x.UserSid
	}
	return ""
}

func (x *DataMessageReq) GetMsgBodyType() DataMsgBodyType {
	if x != nil {
		return x.MsgBodyType
	}
	return DataMsgBodyType_UNKNOWN
}

func (x *DataMessageReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DataMessageReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

func (x *DataMessageReq) GetSendTo() []string {
	if x != nil {
		return x.SendTo
	}
	return nil
}

func (x *DataMessageReq) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type RoomEndAPIReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomEndAPIReq) Reset() {
	*x = RoomEndAPIReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomEndAPIReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEndAPIReq) ProtoMessage() {}

func (x *RoomEndAPIReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEndAPIReq.ProtoReflect.Descriptor instead.
func (*RoomEndAPIReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{6}
}

func (x *RoomEndAPIReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type ChangeVisibilityRes struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RoomId            string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	VisibleNotepad    *bool                  `protobuf:"varint,2,opt,name=visible_notepad,json=visibleNotepad,proto3,oneof" json:"visible_notepad,omitempty"`
	VisibleWhiteBoard *bool                  `protobuf:"varint,3,opt,name=visible_white_board,json=visibleWhiteBoard,proto3,oneof" json:"visible_white_board,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChangeVisibilityRes) Reset() {
	*x = ChangeVisibilityRes{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeVisibilityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeVisibilityRes) ProtoMessage() {}

func (x *ChangeVisibilityRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeVisibilityRes.ProtoReflect.Descriptor instead.
func (*ChangeVisibilityRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeVisibilityRes) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeVisibilityRes) GetVisibleNotepad() bool {
	if x != nil && x.VisibleNotepad != nil {
		return *x.VisibleNotepad
	}
	return false
}

func (x *ChangeVisibilityRes) GetVisibleWhiteBoard() bool {
	if x != nil && x.VisibleWhiteBoard != nil {
		return *x.VisibleWhiteBoard
	}
	return false
}

type SwitchPresenterReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Task            SwitchPresenterTask    `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.SwitchPresenterTask" json:"task,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId          string                 `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RequestedUserId string                 `protobuf:"bytes,4,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SwitchPresenterReq) Reset() {
	*x = SwitchPresenterReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchPresenterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchPresenterReq) ProtoMessage() {}

func (x *SwitchPresenterReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchPresenterReq.ProtoReflect.Descriptor instead.
func (*SwitchPresenterReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchPresenterReq) GetTask() SwitchPresenterTask {
	if x != nil {
		return x.Task
	}
	return SwitchPresenterTask_PROMOTE
}

func (x *SwitchPresenterReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SwitchPresenterReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SwitchPresenterReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

type ExternalMediaPlayerReq struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Task          ExternalMediaPlayerTask `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.ExternalMediaPlayerTask" json:"task,omitempty"`
	Url           *string                 `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	SeekTo        *float64                `protobuf:"fixed64,3,opt,name=seek_to,json=seekTo,proto3,oneof" json:"seek_to,omitempty"`
	RoomId        string                  `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                  `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalMediaPlayerReq) Reset() {
	*x = ExternalMediaPlayerReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalMediaPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalMediaPlayerReq) ProtoMessage() {}

func (x *ExternalMediaPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalMediaPlayerReq.ProtoReflect.Descriptor instead.
func (*ExternalMediaPlayerReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalMediaPlayerReq) GetTask() ExternalMediaPlayerTask {
	if x != nil {
		return x.Task
	}
	return ExternalMediaPlayerTask_START_PLAYBACK
}

func (x *ExternalMediaPlayerReq) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ExternalMediaPlayerReq) GetSeekTo() float64 {
	if x != nil && x.SeekTo != nil {
		return *x.SeekTo
	}
	return 0
}

func (x *ExternalMediaPlayerReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ExternalMediaPlayerReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExternalDisplayLinkReq struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Task          ExternalDisplayLinkTask `protobuf:"varint,1,opt,name=task,proto3,enum=plugnmeet.ExternalDisplayLinkTask" json:"task,omitempty"`
	Url           *string                 `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	RoomId        string                  `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                  `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalDisplayLinkReq) Reset() {
	*x = ExternalDisplayLinkReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalDisplayLinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalDisplayLinkReq) ProtoMessage() {}

func (x *ExternalDisplayLinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalDisplayLinkReq.ProtoReflect.Descriptor instead.
func (*ExternalDisplayLinkReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalDisplayLinkReq) GetTask() ExternalDisplayLinkTask {
	if x != nil {
		return x.Task
	}
	return ExternalDisplayLinkTask_START_EXTERNAL_LINK
}

func (x *ExternalDisplayLinkReq) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ExternalDisplayLinkReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ExternalDisplayLinkReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateEtherpadSessionRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	PadId         *string                `protobuf:"bytes,3,opt,name=pad_id,json=padId,proto3,oneof" json:"pad_id,omitempty"`
	ReadonlyPadId *string                `protobuf:"bytes,4,opt,name=readonly_pad_id,json=readonlyPadId,proto3,oneof" json:"readonly_pad_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEtherpadSessionRes) Reset() {
	*x = CreateEtherpadSessionRes{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEtherpadSessionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEtherpadSessionRes) ProtoMessage() {}

func (x *CreateEtherpadSessionRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEtherpadSessionRes.ProtoReflect.Descriptor instead.
func (*CreateEtherpadSessionRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateEtherpadSessionRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateEtherpadSessionRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateEtherpadSessionRes) GetPadId() string {
	if x != nil && x.PadId != nil {
		return *x.PadId
	}
	return ""
}

func (x *CreateEtherpadSessionRes) GetReadonlyPadId() string {
	if x != nil && x.ReadonlyPadId != nil {
		return *x.ReadonlyPadId
	}
	return ""
}

type CleanEtherpadReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PadId         string                 `protobuf:"bytes,3,opt,name=pad_id,json=padId,proto3" json:"pad_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanEtherpadReq) Reset() {
	*x = CleanEtherpadReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanEtherpadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanEtherpadReq) ProtoMessage() {}

func (x *CleanEtherpadReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanEtherpadReq.ProtoReflect.Descriptor instead.
func (*CleanEtherpadReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{12}
}

func (x *CleanEtherpadReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CleanEtherpadReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CleanEtherpadReq) GetPadId() string {
	if x != nil {
		return x.PadId
	}
	return ""
}

type ChangeEtherpadStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsActive      bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeEtherpadStatusReq) Reset() {
	*x = ChangeEtherpadStatusReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeEtherpadStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEtherpadStatusReq) ProtoMessage() {}

func (x *ChangeEtherpadStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEtherpadStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeEtherpadStatusReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{13}
}

func (x *ChangeEtherpadStatusReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeEtherpadStatusReq) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type ApproveWaitingUsersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveWaitingUsersReq) Reset() {
	*x = ApproveWaitingUsersReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveWaitingUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveWaitingUsersReq) ProtoMessage() {}

func (x *ApproveWaitingUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveWaitingUsersReq.ProtoReflect.Descriptor instead.
func (*ApproveWaitingUsersReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{14}
}

func (x *ApproveWaitingUsersReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ApproveWaitingUsersReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateWaitingRoomMessageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWaitingRoomMessageReq) Reset() {
	*x = UpdateWaitingRoomMessageReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWaitingRoomMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingRoomMessageReq) ProtoMessage() {}

func (x *UpdateWaitingRoomMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingRoomMessageReq.ProtoReflect.Descriptor instead.
func (*UpdateWaitingRoomMessageReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateWaitingRoomMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateWaitingRoomMessageReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateUserLockSettingsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoomSid         string                 `protobuf:"bytes,1,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	RoomId          string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId          string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Service         string                 `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Direction       string                 `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"`
	RequestedUserId string                 `protobuf:"bytes,6,opt,name=Requested_user_id,json=RequestedUserId,proto3" json:"Requested_user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateUserLockSettingsReq) Reset() {
	*x = UpdateUserLockSettingsReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserLockSettingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLockSettingsReq) ProtoMessage() {}

func (x *UpdateUserLockSettingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLockSettingsReq.ProtoReflect.Descriptor instead.
func (*UpdateUserLockSettingsReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUserLockSettingsReq) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *UpdateUserLockSettingsReq) GetRequestedUserId() string {
	if x != nil {
		return x.RequestedUserId
	}
	return ""
}

type UploadBase64EncodedDataReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	FileName      string                 `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadBase64EncodedDataReq) Reset() {
	*x = UploadBase64EncodedDataReq{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBase64EncodedDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBase64EncodedDataReq) ProtoMessage() {}

func (x *UploadBase64EncodedDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBase64EncodedDataReq.ProtoReflect.Descriptor instead.
func (*UploadBase64EncodedDataReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{17}
}

func (x *UploadBase64EncodedDataReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UploadBase64EncodedDataReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *UploadBase64EncodedDataReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadBase64EncodedDataRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileName      string                 `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileExtension string                 `protobuf:"bytes,5,opt,name=file_extension,json=fileExtension,proto3" json:"file_extension,omitempty"`
	FileMimeType  string                 `protobuf:"bytes,6,opt,name=file_mime_type,json=fileMimeType,proto3" json:"file_mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadBase64EncodedDataRes) Reset() {
	*x = UploadBase64EncodedDataRes{}
	mi := &file_plugnmeet_common_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBase64EncodedDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBase64EncodedDataRes) ProtoMessage() {}

func (x *UploadBase64EncodedDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_common_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBase64EncodedDataRes.ProtoReflect.Descriptor instead.
func (*UploadBase64EncodedDataRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_common_api_proto_rawDescGZIP(), []int{18}
}

func (x *UploadBase64EncodedDataRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UploadBase64EncodedDataRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UploadBase64EncodedDataRes) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadBase64EncodedDataRes) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadBase64EncodedDataRes) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *UploadBase64EncodedDataRes) GetFileMimeType() string {
	if x != nil {
		return x.FileMimeType
	}
	return ""
}

var File_plugnmeet_common_api_proto protoreflect.FileDescriptor

const file_plugnmeet_common_api_proto_rawDesc = "" +
	"\n" +
	"\x1aplugnmeet_common_api.proto\x12\tplugnmeet\x1a\x1bplugnmeet_datamessage.proto\x1a\x18plugnmeet_nats_msg.proto\":\n" +
	"\x0eCommonResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"L\n" +
	"\x0eVerifyTokenReq\x12(\n" +
	"\ris_production\x18\x01 \x01(\bH\x00R\fisProduction\x88\x01\x01B\x10\n" +
	"\x0e_is_production\"\xe9\x03\n" +
	"\x0eVerifyTokenRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12 \n" +
	"\fnats_ws_urls\x18\x03 \x03(\tR\n" +
	"natsWsUrls\x12*\n" +
	"\x0eserver_version\x18\x04 \x01(\tH\x00R\rserverVersion\x88\x01\x01\x12\x1c\n" +
	"\aroom_id\x18\x05 \x01(\tH\x01R\x06roomId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x06 \x01(\tH\x02R\x06userId\x88\x01\x01\x12A\n" +
	"\rnats_subjects\x18\a \x01(\v2\x17.plugnmeet.NatsSubjectsH\x03R\fnatsSubjects\x88\x01\x01\x12O\n" +
	"\"enabled_self_insert_encryption_key\x18\b \x01(\bH\x04R\x1eenabledSelfInsertEncryptionKey\x88\x01\x01\x12\x1e\n" +
	"\bis_cloud\x18\t \x01(\bH\x05R\aisCloud\x88\x01\x01B\x11\n" +
	"\x0f_server_versionB\n" +
	"\n" +
	"\b_room_idB\n" +
	"\n" +
	"\b_user_idB\x10\n" +
	"\x0e_nats_subjectsB%\n" +
	"#_enabled_self_insert_encryption_keyB\v\n" +
	"\t_is_cloud\"\xb7\x01\n" +
	"\x12MuteUnMuteTrackReq\x12\x10\n" +
	"\x03sid\x18\x01 \x01(\tR\x03sid\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttrack_sid\x18\x04 \x01(\tR\btrackSid\x12\x14\n" +
	"\x05muted\x18\x05 \x01(\bR\x05muted\x12*\n" +
	"\x11Requested_user_id\x18\x06 \x01(\tR\x0fRequestedUserId\"\x8b\x01\n" +
	"\x14RemoveParticipantReq\x12\x10\n" +
	"\x03sid\x18\x01 \x01(\tR\x03sid\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg\x12\x1d\n" +
	"\n" +
	"block_user\x18\x05 \x01(\bR\tblockUser\"\xaa\x02\n" +
	"\x0eDataMessageReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x19\n" +
	"\broom_sid\x18\x02 \x01(\tR\aroomSid\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x19\n" +
	"\buser_sid\x18\x04 \x01(\tR\auserSid\x12>\n" +
	"\rmsg_body_type\x18\x05 \x01(\x0e2\x1a.plugnmeet.DataMsgBodyTypeR\vmsgBodyType\x12\x10\n" +
	"\x03msg\x18\x06 \x01(\tR\x03msg\x12*\n" +
	"\x11Requested_user_id\x18\a \x01(\tR\x0fRequestedUserId\x12\x17\n" +
	"\asend_to\x18\b \x03(\tR\x06sendTo\x12\x19\n" +
	"\bis_admin\x18\t \x01(\bR\aisAdmin\"(\n" +
	"\rRoomEndAPIReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\"\xbd\x01\n" +
	"\x13ChangeVisibilityRes\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12,\n" +
	"\x0fvisible_notepad\x18\x02 \x01(\bH\x00R\x0evisibleNotepad\x88\x01\x01\x123\n" +
	"\x13visible_white_board\x18\x03 \x01(\bH\x01R\x11visibleWhiteBoard\x88\x01\x01B\x12\n" +
	"\x10_visible_notepadB\x16\n" +
	"\x14_visible_white_board\"\xa6\x01\n" +
	"\x12SwitchPresenterReq\x122\n" +
	"\x04task\x18\x01 \x01(\x0e2\x1e.plugnmeet.SwitchPresenterTaskR\x04task\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\x12*\n" +
	"\x11Requested_user_id\x18\x04 \x01(\tR\x0fRequestedUserId\"\xcb\x01\n" +
	"\x16ExternalMediaPlayerReq\x126\n" +
	"\x04task\x18\x01 \x01(\x0e2\".plugnmeet.ExternalMediaPlayerTaskR\x04task\x12\x15\n" +
	"\x03url\x18\x02 \x01(\tH\x00R\x03url\x88\x01\x01\x12\x1c\n" +
	"\aseek_to\x18\x03 \x01(\x01H\x01R\x06seekTo\x88\x01\x01\x12\x17\n" +
	"\aroom_id\x18\x04 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userIdB\x06\n" +
	"\x04_urlB\n" +
	"\n" +
	"\b_seek_to\"\xa1\x01\n" +
	"\x16ExternalDisplayLinkReq\x126\n" +
	"\x04task\x18\x01 \x01(\x0e2\".plugnmeet.ExternalDisplayLinkTaskR\x04task\x12\x15\n" +
	"\x03url\x18\x02 \x01(\tH\x00R\x03url\x88\x01\x01\x12\x17\n" +
	"\aroom_id\x18\x04 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userIdB\x06\n" +
	"\x04_url\"\xac\x01\n" +
	"\x18CreateEtherpadSessionRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x1a\n" +
	"\x06pad_id\x18\x03 \x01(\tH\x00R\x05padId\x88\x01\x01\x12+\n" +
	"\x0freadonly_pad_id\x18\x04 \x01(\tH\x01R\rreadonlyPadId\x88\x01\x01B\t\n" +
	"\a_pad_idB\x12\n" +
	"\x10_readonly_pad_id\"[\n" +
	"\x10CleanEtherpadReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x15\n" +
	"\x06pad_id\x18\x03 \x01(\tR\x05padId\"O\n" +
	"\x17ChangeEtherpadStatusReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\"J\n" +
	"\x16ApproveWaitingUsersReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x1bUpdateWaitingRoomMessageReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"\xcc\x01\n" +
	"\x19UpdateUserLockSettingsReq\x12\x19\n" +
	"\broom_sid\x18\x01 \x01(\tR\aroomSid\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\aservice\x18\x04 \x01(\tR\aservice\x12\x1c\n" +
	"\tdirection\x18\x05 \x01(\tR\tdirection\x12*\n" +
	"\x11Requested_user_id\x18\x06 \x01(\tR\x0fRequestedUserId\"f\n" +
	"\x1aUploadBase64EncodedDataReq\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x1b\n" +
	"\tfile_name\x18\x04 \x01(\tR\bfileName\"\xcd\x01\n" +
	"\x1aUploadBase64EncodedDataRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_name\x18\x04 \x01(\tR\bfileName\x12%\n" +
	"\x0efile_extension\x18\x05 \x01(\tR\rfileExtension\x12$\n" +
	"\x0efile_mime_type\x18\x06 \x01(\tR\ffileMimeType*.\n" +
	"\x13SwitchPresenterTask\x12\v\n" +
	"\aPROMOTE\x10\x00\x12\n" +
	"\n" +
	"\x06DEMOTE\x10\x01*?\n" +
	"\x17ExternalMediaPlayerTask\x12\x12\n" +
	"\x0eSTART_PLAYBACK\x10\x00\x12\x10\n" +
	"\fEND_PLAYBACK\x10\x01*J\n" +
	"\x17ExternalDisplayLinkTask\x12\x17\n" +
	"\x13START_EXTERNAL_LINK\x10\x00\x12\x16\n" +
	"\x12STOP_EXTERNAL_LINK\x10\x01B\xa0\x01\n" +
	"\rcom.plugnmeetB\x17PlugnmeetCommonApiProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_common_api_proto_rawDescOnce sync.Once
	file_plugnmeet_common_api_proto_rawDescData []byte
)

func file_plugnmeet_common_api_proto_rawDescGZIP() []byte {
	file_plugnmeet_common_api_proto_rawDescOnce.Do(func() {
		file_plugnmeet_common_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_common_api_proto_rawDesc), len(file_plugnmeet_common_api_proto_rawDesc)))
	})
	return file_plugnmeet_common_api_proto_rawDescData
}

var file_plugnmeet_common_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_plugnmeet_common_api_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_plugnmeet_common_api_proto_goTypes = []any{
	(SwitchPresenterTask)(0),            // 0: plugnmeet.SwitchPresenterTask
	(ExternalMediaPlayerTask)(0),        // 1: plugnmeet.ExternalMediaPlayerTask
	(ExternalDisplayLinkTask)(0),        // 2: plugnmeet.ExternalDisplayLinkTask
	(*CommonResponse)(nil),              // 3: plugnmeet.CommonResponse
	(*VerifyTokenReq)(nil),              // 4: plugnmeet.VerifyTokenReq
	(*VerifyTokenRes)(nil),              // 5: plugnmeet.VerifyTokenRes
	(*MuteUnMuteTrackReq)(nil),          // 6: plugnmeet.MuteUnMuteTrackReq
	(*RemoveParticipantReq)(nil),        // 7: plugnmeet.RemoveParticipantReq
	(*DataMessageReq)(nil),              // 8: plugnmeet.DataMessageReq
	(*RoomEndAPIReq)(nil),               // 9: plugnmeet.RoomEndAPIReq
	(*ChangeVisibilityRes)(nil),         // 10: plugnmeet.ChangeVisibilityRes
	(*SwitchPresenterReq)(nil),          // 11: plugnmeet.SwitchPresenterReq
	(*ExternalMediaPlayerReq)(nil),      // 12: plugnmeet.ExternalMediaPlayerReq
	(*ExternalDisplayLinkReq)(nil),      // 13: plugnmeet.ExternalDisplayLinkReq
	(*CreateEtherpadSessionRes)(nil),    // 14: plugnmeet.CreateEtherpadSessionRes
	(*CleanEtherpadReq)(nil),            // 15: plugnmeet.CleanEtherpadReq
	(*ChangeEtherpadStatusReq)(nil),     // 16: plugnmeet.ChangeEtherpadStatusReq
	(*ApproveWaitingUsersReq)(nil),      // 17: plugnmeet.ApproveWaitingUsersReq
	(*UpdateWaitingRoomMessageReq)(nil), // 18: plugnmeet.UpdateWaitingRoomMessageReq
	(*UpdateUserLockSettingsReq)(nil),   // 19: plugnmeet.UpdateUserLockSettingsReq
	(*UploadBase64EncodedDataReq)(nil),  // 20: plugnmeet.UploadBase64EncodedDataReq
	(*UploadBase64EncodedDataRes)(nil),  // 21: plugnmeet.UploadBase64EncodedDataRes
	(*NatsSubjects)(nil),                // 22: plugnmeet.NatsSubjects
	(DataMsgBodyType)(0),                // 23: plugnmeet.DataMsgBodyType
}
var file_plugnmeet_common_api_proto_depIdxs = []int32{
	22, // 0: plugnmeet.VerifyTokenRes.nats_subjects:type_name -> plugnmeet.NatsSubjects
	23, // 1: plugnmeet.DataMessageReq.msg_body_type:type_name -> plugnmeet.DataMsgBodyType
	0,  // 2: plugnmeet.SwitchPresenterReq.task:type_name -> plugnmeet.SwitchPresenterTask
	1,  // 3: plugnmeet.ExternalMediaPlayerReq.task:type_name -> plugnmeet.ExternalMediaPlayerTask
	2,  // 4: plugnmeet.ExternalDisplayLinkReq.task:type_name -> plugnmeet.ExternalDisplayLinkTask
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_plugnmeet_common_api_proto_init() }
func file_plugnmeet_common_api_proto_init() {
	if File_plugnmeet_common_api_proto != nil {
		return
	}
	file_plugnmeet_datamessage_proto_init()
	file_plugnmeet_nats_msg_proto_init()
	file_plugnmeet_common_api_proto_msgTypes[1].OneofWrappers = []any{}
	file_plugnmeet_common_api_proto_msgTypes[2].OneofWrappers = []any{}
	file_plugnmeet_common_api_proto_msgTypes[7].OneofWrappers = []any{}
	file_plugnmeet_common_api_proto_msgTypes[9].OneofWrappers = []any{}
	file_plugnmeet_common_api_proto_msgTypes[10].OneofWrappers = []any{}
	file_plugnmeet_common_api_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_common_api_proto_rawDesc), len(file_plugnmeet_common_api_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_common_api_proto_goTypes,
		DependencyIndexes: file_plugnmeet_common_api_proto_depIdxs,
		EnumInfos:         file_plugnmeet_common_api_proto_enumTypes,
		MessageInfos:      file_plugnmeet_common_api_proto_msgTypes,
	}.Build()
	File_plugnmeet_common_api_proto = out.File
	file_plugnmeet_common_api_proto_goTypes = nil
	file_plugnmeet_common_api_proto_depIdxs = nil
}
