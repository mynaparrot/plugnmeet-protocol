// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: plugnmeet_gen_token.proto

package plugnmeet

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserInfo      *UserInfo              `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTokenReq) Reset() {
	*x = GenerateTokenReq{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenReq) ProtoMessage() {}

func (x *GenerateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenReq.ProtoReflect.Descriptor instead.
func (*GenerateTokenReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateTokenReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GenerateTokenReq) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin       bool                   `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsHidden      bool                   `protobuf:"varint,4,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	UserMetadata  *UserMetadata          `protobuf:"bytes,5,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UserInfo) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *UserInfo) GetUserMetadata() *UserMetadata {
	if x != nil {
		return x.UserMetadata
	}
	return nil
}

type UserMetadata struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProfilePic      *string                `protobuf:"bytes,1,opt,name=profile_pic,json=profilePic,proto3,oneof" json:"profile_pic,omitempty"`
	IsAdmin         bool                   `protobuf:"varint,2,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	RecordWebcam    *bool                  `protobuf:"varint,3,opt,name=record_webcam,json=recordWebcam,proto3,oneof" json:"record_webcam,omitempty"`
	IsPresenter     bool                   `protobuf:"varint,4,opt,name=is_presenter,json=isPresenter,proto3" json:"is_presenter,omitempty"`
	RaisedHand      bool                   `protobuf:"varint,5,opt,name=raised_hand,json=raisedHand,proto3" json:"raised_hand,omitempty"`
	WaitForApproval bool                   `protobuf:"varint,6,opt,name=wait_for_approval,json=waitForApproval,proto3" json:"wait_for_approval,omitempty"`
	PreferredLang   *string                `protobuf:"bytes,7,opt,name=preferred_lang,json=preferredLang,proto3,oneof" json:"preferred_lang,omitempty"`
	LockSettings    *LockSettings          `protobuf:"bytes,8,opt,name=lock_settings,json=lockSettings,proto3" json:"lock_settings,omitempty"`
	// we'll use this as version control
	MetadataId *string `protobuf:"bytes,9,opt,name=metadata_id,json=metadataId,proto3,oneof" json:"metadata_id,omitempty"`
	ExtraData  *string `protobuf:"bytes,10,opt,name=extra_data,json=extraData,proto3,oneof" json:"extra_data,omitempty"`
	// if remain empty then will use value from user_id
	ExUserId      *string `protobuf:"bytes,11,opt,name=ex_user_id,json=exUserId,proto3,oneof" json:"ex_user_id,omitempty"` // Next ID: 12
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMetadata) Reset() {
	*x = UserMetadata{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetadata) ProtoMessage() {}

func (x *UserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetadata.ProtoReflect.Descriptor instead.
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{2}
}

func (x *UserMetadata) GetProfilePic() string {
	if x != nil && x.ProfilePic != nil {
		return *x.ProfilePic
	}
	return ""
}

func (x *UserMetadata) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UserMetadata) GetRecordWebcam() bool {
	if x != nil && x.RecordWebcam != nil {
		return *x.RecordWebcam
	}
	return false
}

func (x *UserMetadata) GetIsPresenter() bool {
	if x != nil {
		return x.IsPresenter
	}
	return false
}

func (x *UserMetadata) GetRaisedHand() bool {
	if x != nil {
		return x.RaisedHand
	}
	return false
}

func (x *UserMetadata) GetWaitForApproval() bool {
	if x != nil {
		return x.WaitForApproval
	}
	return false
}

func (x *UserMetadata) GetPreferredLang() string {
	if x != nil && x.PreferredLang != nil {
		return *x.PreferredLang
	}
	return ""
}

func (x *UserMetadata) GetLockSettings() *LockSettings {
	if x != nil {
		return x.LockSettings
	}
	return nil
}

func (x *UserMetadata) GetMetadataId() string {
	if x != nil && x.MetadataId != nil {
		return *x.MetadataId
	}
	return ""
}

func (x *UserMetadata) GetExtraData() string {
	if x != nil && x.ExtraData != nil {
		return *x.ExtraData
	}
	return ""
}

func (x *UserMetadata) GetExUserId() string {
	if x != nil && x.ExUserId != nil {
		return *x.ExUserId
	}
	return ""
}

type PlugNmeetTokenClaims struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsAdmin       bool                   `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsHidden      bool                   `protobuf:"varint,5,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlugNmeetTokenClaims) Reset() {
	*x = PlugNmeetTokenClaims{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlugNmeetTokenClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugNmeetTokenClaims) ProtoMessage() {}

func (x *PlugNmeetTokenClaims) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugNmeetTokenClaims.ProtoReflect.Descriptor instead.
func (*PlugNmeetTokenClaims) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{3}
}

func (x *PlugNmeetTokenClaims) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlugNmeetTokenClaims) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlugNmeetTokenClaims) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PlugNmeetTokenClaims) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *PlugNmeetTokenClaims) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

type LockSettings struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	LockMicrophone      *bool                  `protobuf:"varint,1,opt,name=lock_microphone,json=lockMicrophone,proto3,oneof" json:"lock_microphone,omitempty"`
	LockWebcam          *bool                  `protobuf:"varint,2,opt,name=lock_webcam,json=lockWebcam,proto3,oneof" json:"lock_webcam,omitempty"`
	LockScreenSharing   *bool                  `protobuf:"varint,3,opt,name=lock_screen_sharing,json=lockScreenSharing,proto3,oneof" json:"lock_screen_sharing,omitempty"`
	LockChat            *bool                  `protobuf:"varint,4,opt,name=lock_chat,json=lockChat,proto3,oneof" json:"lock_chat,omitempty"`
	LockChatSendMessage *bool                  `protobuf:"varint,5,opt,name=lock_chat_send_message,json=lockChatSendMessage,proto3,oneof" json:"lock_chat_send_message,omitempty"`
	LockChatFileShare   *bool                  `protobuf:"varint,6,opt,name=lock_chat_file_share,json=lockChatFileShare,proto3,oneof" json:"lock_chat_file_share,omitempty"`
	LockPrivateChat     *bool                  `protobuf:"varint,7,opt,name=lock_private_chat,json=lockPrivateChat,proto3,oneof" json:"lock_private_chat,omitempty"`
	LockWhiteboard      *bool                  `protobuf:"varint,8,opt,name=lock_whiteboard,json=lockWhiteboard,proto3,oneof" json:"lock_whiteboard,omitempty"`
	LockSharedNotepad   *bool                  `protobuf:"varint,9,opt,name=lock_shared_notepad,json=lockSharedNotepad,proto3,oneof" json:"lock_shared_notepad,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LockSettings) Reset() {
	*x = LockSettings{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSettings) ProtoMessage() {}

func (x *LockSettings) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSettings.ProtoReflect.Descriptor instead.
func (*LockSettings) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{4}
}

func (x *LockSettings) GetLockMicrophone() bool {
	if x != nil && x.LockMicrophone != nil {
		return *x.LockMicrophone
	}
	return false
}

func (x *LockSettings) GetLockWebcam() bool {
	if x != nil && x.LockWebcam != nil {
		return *x.LockWebcam
	}
	return false
}

func (x *LockSettings) GetLockScreenSharing() bool {
	if x != nil && x.LockScreenSharing != nil {
		return *x.LockScreenSharing
	}
	return false
}

func (x *LockSettings) GetLockChat() bool {
	if x != nil && x.LockChat != nil {
		return *x.LockChat
	}
	return false
}

func (x *LockSettings) GetLockChatSendMessage() bool {
	if x != nil && x.LockChatSendMessage != nil {
		return *x.LockChatSendMessage
	}
	return false
}

func (x *LockSettings) GetLockChatFileShare() bool {
	if x != nil && x.LockChatFileShare != nil {
		return *x.LockChatFileShare
	}
	return false
}

func (x *LockSettings) GetLockPrivateChat() bool {
	if x != nil && x.LockPrivateChat != nil {
		return *x.LockPrivateChat
	}
	return false
}

func (x *LockSettings) GetLockWhiteboard() bool {
	if x != nil && x.LockWhiteboard != nil {
		return *x.LockWhiteboard
	}
	return false
}

func (x *LockSettings) GetLockSharedNotepad() bool {
	if x != nil && x.LockSharedNotepad != nil {
		return *x.LockSharedNotepad
	}
	return false
}

type GenerateTokenRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Token         *string                `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateTokenRes) Reset() {
	*x = GenerateTokenRes{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRes) ProtoMessage() {}

func (x *GenerateTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRes.ProtoReflect.Descriptor instead.
func (*GenerateTokenRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateTokenRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GenerateTokenRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GenerateTokenRes) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type CustomDesignParams struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PrimaryColor     *string                `protobuf:"bytes,1,opt,name=primary_color,json=primaryColor,proto3,oneof" json:"primary_color,omitempty"`
	SecondaryColor   *string                `protobuf:"bytes,2,opt,name=secondary_color,json=secondaryColor,proto3,oneof" json:"secondary_color,omitempty"`
	BackgroundColor  *string                `protobuf:"bytes,3,opt,name=background_color,json=backgroundColor,proto3,oneof" json:"background_color,omitempty"`
	BackgroundImage  *string                `protobuf:"bytes,4,opt,name=background_image,json=backgroundImage,proto3,oneof" json:"background_image,omitempty"`
	HeaderBgColor    *string                `protobuf:"bytes,5,opt,name=header_bg_color,json=headerBgColor,proto3,oneof" json:"header_bg_color,omitempty"`
	FooterBgColor    *string                `protobuf:"bytes,6,opt,name=footer_bg_color,json=footerBgColor,proto3,oneof" json:"footer_bg_color,omitempty"`
	LeftSideBgColor  *string                `protobuf:"bytes,7,opt,name=left_side_bg_color,json=leftSideBgColor,proto3,oneof" json:"left_side_bg_color,omitempty"`
	RightSideBgColor *string                `protobuf:"bytes,8,opt,name=right_side_bg_color,json=rightSideBgColor,proto3,oneof" json:"right_side_bg_color,omitempty"`
	CustomCssUrl     *string                `protobuf:"bytes,9,opt,name=custom_css_url,json=customCssUrl,proto3,oneof" json:"custom_css_url,omitempty"`
	CustomLogo       *string                `protobuf:"bytes,10,opt,name=custom_logo,json=customLogo,proto3,oneof" json:"custom_logo,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CustomDesignParams) Reset() {
	*x = CustomDesignParams{}
	mi := &file_plugnmeet_gen_token_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomDesignParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDesignParams) ProtoMessage() {}

func (x *CustomDesignParams) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_gen_token_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDesignParams.ProtoReflect.Descriptor instead.
func (*CustomDesignParams) Descriptor() ([]byte, []int) {
	return file_plugnmeet_gen_token_proto_rawDescGZIP(), []int{6}
}

func (x *CustomDesignParams) GetPrimaryColor() string {
	if x != nil && x.PrimaryColor != nil {
		return *x.PrimaryColor
	}
	return ""
}

func (x *CustomDesignParams) GetSecondaryColor() string {
	if x != nil && x.SecondaryColor != nil {
		return *x.SecondaryColor
	}
	return ""
}

func (x *CustomDesignParams) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *CustomDesignParams) GetBackgroundImage() string {
	if x != nil && x.BackgroundImage != nil {
		return *x.BackgroundImage
	}
	return ""
}

func (x *CustomDesignParams) GetHeaderBgColor() string {
	if x != nil && x.HeaderBgColor != nil {
		return *x.HeaderBgColor
	}
	return ""
}

func (x *CustomDesignParams) GetFooterBgColor() string {
	if x != nil && x.FooterBgColor != nil {
		return *x.FooterBgColor
	}
	return ""
}

func (x *CustomDesignParams) GetLeftSideBgColor() string {
	if x != nil && x.LeftSideBgColor != nil {
		return *x.LeftSideBgColor
	}
	return ""
}

func (x *CustomDesignParams) GetRightSideBgColor() string {
	if x != nil && x.RightSideBgColor != nil {
		return *x.RightSideBgColor
	}
	return ""
}

func (x *CustomDesignParams) GetCustomCssUrl() string {
	if x != nil && x.CustomCssUrl != nil {
		return *x.CustomCssUrl
	}
	return ""
}

func (x *CustomDesignParams) GetCustomLogo() string {
	if x != nil && x.CustomLogo != nil {
		return *x.CustomLogo
	}
	return ""
}

var File_plugnmeet_gen_token_proto protoreflect.FileDescriptor

const file_plugnmeet_gen_token_proto_rawDesc = "" +
	"\n" +
	"\x19plugnmeet_gen_token.proto\x12\tplugnmeet\x1a\x1bbuf/validate/validate.proto\"\xe3\x01\n" +
	"\x10GenerateTokenReq\x12\x94\x01\n" +
	"\aroom_id\x18\x01 \x01(\tB{\xbaHx\xba\x01u\n" +
	"\x0eroom_id_format\x12Aroom_id should only contain letters (a-z A-Z), digits (0-9) or -_\x1a this.matches('^[a-zA-Z0-9-_]+$')R\x06roomId\x128\n" +
	"\tuser_info\x18\x02 \x01(\v2\x13.plugnmeet.UserInfoB\x06\xbaH\x03\xc8\x01\x01R\buserInfo\"\xb5\x01\n" +
	"\bUserInfo\x12\x1a\n" +
	"\x04name\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04name\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\bis_admin\x18\x03 \x01(\bR\aisAdmin\x12\x1b\n" +
	"\tis_hidden\x18\x04 \x01(\bR\bisHidden\x12<\n" +
	"\ruser_metadata\x18\x05 \x01(\v2\x17.plugnmeet.UserMetadataR\fuserMetadata\"\xa2\x05\n" +
	"\fUserMetadata\x12.\n" +
	"\vprofile_pic\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x88\x01\x01H\x00R\n" +
	"profilePic\x88\x01\x01\x12\x19\n" +
	"\bis_admin\x18\x02 \x01(\bR\aisAdmin\x12(\n" +
	"\rrecord_webcam\x18\x03 \x01(\bH\x01R\frecordWebcam\x88\x01\x01\x12*\n" +
	"\fis_presenter\x18\x04 \x01(\bB\a\xbaH\x04j\x02\b\x00R\visPresenter\x12(\n" +
	"\vraised_hand\x18\x05 \x01(\bB\a\xbaH\x04j\x02\b\x00R\n" +
	"raisedHand\x123\n" +
	"\x11wait_for_approval\x18\x06 \x01(\bB\a\xbaH\x04j\x02\b\x00R\x0fwaitForApproval\x12*\n" +
	"\x0epreferred_lang\x18\a \x01(\tH\x02R\rpreferredLang\x88\x01\x01\x12<\n" +
	"\rlock_settings\x18\b \x01(\v2\x17.plugnmeet.LockSettingsR\flockSettings\x12~\n" +
	"\vmetadata_id\x18\t \x01(\tBX\xbaHU\xba\x01R\n" +
	"\x12metadata_id_format\x12(metadata_id should not contain any value\x1a\x12this.matches('^$')H\x03R\n" +
	"metadataId\x88\x01\x01\x12\"\n" +
	"\n" +
	"extra_data\x18\n" +
	" \x01(\tH\x04R\textraData\x88\x01\x01\x12!\n" +
	"\n" +
	"ex_user_id\x18\v \x01(\tH\x05R\bexUserId\x88\x01\x01B\x0e\n" +
	"\f_profile_picB\x10\n" +
	"\x0e_record_webcamB\x11\n" +
	"\x0f_preferred_langB\x0e\n" +
	"\f_metadata_idB\r\n" +
	"\v_extra_dataB\r\n" +
	"\v_ex_user_id\"\x94\x01\n" +
	"\x14PlugNmeetTokenClaims\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\x12\x19\n" +
	"\bis_admin\x18\x04 \x01(\bR\aisAdmin\x12\x1b\n" +
	"\tis_hidden\x18\x05 \x01(\bR\bisHidden\"\xfd\x04\n" +
	"\fLockSettings\x12,\n" +
	"\x0flock_microphone\x18\x01 \x01(\bH\x00R\x0elockMicrophone\x88\x01\x01\x12$\n" +
	"\vlock_webcam\x18\x02 \x01(\bH\x01R\n" +
	"lockWebcam\x88\x01\x01\x123\n" +
	"\x13lock_screen_sharing\x18\x03 \x01(\bH\x02R\x11lockScreenSharing\x88\x01\x01\x12 \n" +
	"\tlock_chat\x18\x04 \x01(\bH\x03R\blockChat\x88\x01\x01\x128\n" +
	"\x16lock_chat_send_message\x18\x05 \x01(\bH\x04R\x13lockChatSendMessage\x88\x01\x01\x124\n" +
	"\x14lock_chat_file_share\x18\x06 \x01(\bH\x05R\x11lockChatFileShare\x88\x01\x01\x12/\n" +
	"\x11lock_private_chat\x18\a \x01(\bH\x06R\x0flockPrivateChat\x88\x01\x01\x12,\n" +
	"\x0flock_whiteboard\x18\b \x01(\bH\aR\x0elockWhiteboard\x88\x01\x01\x123\n" +
	"\x13lock_shared_notepad\x18\t \x01(\bH\bR\x11lockSharedNotepad\x88\x01\x01B\x12\n" +
	"\x10_lock_microphoneB\x0e\n" +
	"\f_lock_webcamB\x16\n" +
	"\x14_lock_screen_sharingB\f\n" +
	"\n" +
	"_lock_chatB\x19\n" +
	"\x17_lock_chat_send_messageB\x17\n" +
	"\x15_lock_chat_file_shareB\x14\n" +
	"\x12_lock_private_chatB\x12\n" +
	"\x10_lock_whiteboardB\x16\n" +
	"\x14_lock_shared_notepad\"a\n" +
	"\x10GenerateTokenRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x19\n" +
	"\x05token\x18\x03 \x01(\tH\x00R\x05token\x88\x01\x01B\b\n" +
	"\x06_token\"\xa7\x05\n" +
	"\x12CustomDesignParams\x12(\n" +
	"\rprimary_color\x18\x01 \x01(\tH\x00R\fprimaryColor\x88\x01\x01\x12,\n" +
	"\x0fsecondary_color\x18\x02 \x01(\tH\x01R\x0esecondaryColor\x88\x01\x01\x12.\n" +
	"\x10background_color\x18\x03 \x01(\tH\x02R\x0fbackgroundColor\x88\x01\x01\x12.\n" +
	"\x10background_image\x18\x04 \x01(\tH\x03R\x0fbackgroundImage\x88\x01\x01\x12+\n" +
	"\x0fheader_bg_color\x18\x05 \x01(\tH\x04R\rheaderBgColor\x88\x01\x01\x12+\n" +
	"\x0ffooter_bg_color\x18\x06 \x01(\tH\x05R\rfooterBgColor\x88\x01\x01\x120\n" +
	"\x12left_side_bg_color\x18\a \x01(\tH\x06R\x0fleftSideBgColor\x88\x01\x01\x122\n" +
	"\x13right_side_bg_color\x18\b \x01(\tH\aR\x10rightSideBgColor\x88\x01\x01\x12)\n" +
	"\x0ecustom_css_url\x18\t \x01(\tH\bR\fcustomCssUrl\x88\x01\x01\x12$\n" +
	"\vcustom_logo\x18\n" +
	" \x01(\tH\tR\n" +
	"customLogo\x88\x01\x01B\x10\n" +
	"\x0e_primary_colorB\x12\n" +
	"\x10_secondary_colorB\x13\n" +
	"\x11_background_colorB\x13\n" +
	"\x11_background_imageB\x12\n" +
	"\x10_header_bg_colorB\x12\n" +
	"\x10_footer_bg_colorB\x15\n" +
	"\x13_left_side_bg_colorB\x16\n" +
	"\x14_right_side_bg_colorB\x11\n" +
	"\x0f_custom_css_urlB\x0e\n" +
	"\f_custom_logoB\x9f\x01\n" +
	"\rcom.plugnmeetB\x16PlugnmeetGenTokenProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_gen_token_proto_rawDescOnce sync.Once
	file_plugnmeet_gen_token_proto_rawDescData []byte
)

func file_plugnmeet_gen_token_proto_rawDescGZIP() []byte {
	file_plugnmeet_gen_token_proto_rawDescOnce.Do(func() {
		file_plugnmeet_gen_token_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_gen_token_proto_rawDesc), len(file_plugnmeet_gen_token_proto_rawDesc)))
	})
	return file_plugnmeet_gen_token_proto_rawDescData
}

var file_plugnmeet_gen_token_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_plugnmeet_gen_token_proto_goTypes = []any{
	(*GenerateTokenReq)(nil),     // 0: plugnmeet.GenerateTokenReq
	(*UserInfo)(nil),             // 1: plugnmeet.UserInfo
	(*UserMetadata)(nil),         // 2: plugnmeet.UserMetadata
	(*PlugNmeetTokenClaims)(nil), // 3: plugnmeet.PlugNmeetTokenClaims
	(*LockSettings)(nil),         // 4: plugnmeet.LockSettings
	(*GenerateTokenRes)(nil),     // 5: plugnmeet.GenerateTokenRes
	(*CustomDesignParams)(nil),   // 6: plugnmeet.CustomDesignParams
}
var file_plugnmeet_gen_token_proto_depIdxs = []int32{
	1, // 0: plugnmeet.GenerateTokenReq.user_info:type_name -> plugnmeet.UserInfo
	2, // 1: plugnmeet.UserInfo.user_metadata:type_name -> plugnmeet.UserMetadata
	4, // 2: plugnmeet.UserMetadata.lock_settings:type_name -> plugnmeet.LockSettings
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_plugnmeet_gen_token_proto_init() }
func file_plugnmeet_gen_token_proto_init() {
	if File_plugnmeet_gen_token_proto != nil {
		return
	}
	file_plugnmeet_gen_token_proto_msgTypes[2].OneofWrappers = []any{}
	file_plugnmeet_gen_token_proto_msgTypes[4].OneofWrappers = []any{}
	file_plugnmeet_gen_token_proto_msgTypes[5].OneofWrappers = []any{}
	file_plugnmeet_gen_token_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_gen_token_proto_rawDesc), len(file_plugnmeet_gen_token_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_gen_token_proto_goTypes,
		DependencyIndexes: file_plugnmeet_gen_token_proto_depIdxs,
		MessageInfos:      file_plugnmeet_gen_token_proto_msgTypes,
	}.Build()
	File_plugnmeet_gen_token_proto = out.File
	file_plugnmeet_gen_token_proto_goTypes = nil
	file_plugnmeet_gen_token_proto_depIdxs = nil
}
