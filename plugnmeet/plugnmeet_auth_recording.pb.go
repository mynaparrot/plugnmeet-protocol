// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: plugnmeet_auth_recording.proto

package plugnmeet

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchRecordingsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomIds       []string               `protobuf:"bytes,1,rep,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty"`
	From          uint32                 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy       string                 `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRecordingsReq) Reset() {
	*x = FetchRecordingsReq{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRecordingsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordingsReq) ProtoMessage() {}

func (x *FetchRecordingsReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordingsReq.ProtoReflect.Descriptor instead.
func (*FetchRecordingsReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{0}
}

func (x *FetchRecordingsReq) GetRoomIds() []string {
	if x != nil {
		return x.RoomIds
	}
	return nil
}

func (x *FetchRecordingsReq) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *FetchRecordingsReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FetchRecordingsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type RecordingInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RecordId         string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	RoomId           string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomSid          string                 `protobuf:"bytes,3,opt,name=room_sid,json=roomSid,proto3" json:"room_sid,omitempty"`
	FilePath         string                 `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileSize         float32                `protobuf:"fixed32,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	CreationTime     int64                  `protobuf:"varint,6,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	RoomCreationTime int64                  `protobuf:"varint,7,opt,name=room_creation_time,json=roomCreationTime,proto3" json:"room_creation_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordingInfo) Reset() {
	*x = RecordingInfo{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingInfo) ProtoMessage() {}

func (x *RecordingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingInfo.ProtoReflect.Descriptor instead.
func (*RecordingInfo) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{1}
}

func (x *RecordingInfo) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *RecordingInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RecordingInfo) GetRoomSid() string {
	if x != nil {
		return x.RoomSid
	}
	return ""
}

func (x *RecordingInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *RecordingInfo) GetFileSize() float32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *RecordingInfo) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *RecordingInfo) GetRoomCreationTime() int64 {
	if x != nil {
		return x.RoomCreationTime
	}
	return 0
}

type FetchRecordingsResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalRecordings int64                  `protobuf:"varint,1,opt,name=total_recordings,json=totalRecordings,proto3" json:"total_recordings,omitempty"`
	From            uint32                 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Limit           uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy         string                 `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	RecordingsList  []*RecordingInfo       `protobuf:"bytes,5,rep,name=recordings_list,json=recordingsList,proto3" json:"recordings_list,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FetchRecordingsResult) Reset() {
	*x = FetchRecordingsResult{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRecordingsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordingsResult) ProtoMessage() {}

func (x *FetchRecordingsResult) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordingsResult.ProtoReflect.Descriptor instead.
func (*FetchRecordingsResult) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{2}
}

func (x *FetchRecordingsResult) GetTotalRecordings() int64 {
	if x != nil {
		return x.TotalRecordings
	}
	return 0
}

func (x *FetchRecordingsResult) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *FetchRecordingsResult) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FetchRecordingsResult) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *FetchRecordingsResult) GetRecordingsList() []*RecordingInfo {
	if x != nil {
		return x.RecordingsList
	}
	return nil
}

type FetchRecordingsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result        *FetchRecordingsResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRecordingsRes) Reset() {
	*x = FetchRecordingsRes{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRecordingsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordingsRes) ProtoMessage() {}

func (x *FetchRecordingsRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordingsRes.ProtoReflect.Descriptor instead.
func (*FetchRecordingsRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{3}
}

func (x *FetchRecordingsRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *FetchRecordingsRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FetchRecordingsRes) GetResult() *FetchRecordingsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type RecordingInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingInfoReq) Reset() {
	*x = RecordingInfoReq{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingInfoReq) ProtoMessage() {}

func (x *RecordingInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingInfoReq.ProtoReflect.Descriptor instead.
func (*RecordingInfoReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{4}
}

func (x *RecordingInfoReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type RecordingInfoRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RecordingInfo *RecordingInfo         `protobuf:"bytes,3,opt,name=recording_info,json=recordingInfo,proto3" json:"recording_info,omitempty"`
	RoomInfo      *PastRoomInfo          `protobuf:"bytes,4,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingInfoRes) Reset() {
	*x = RecordingInfoRes{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingInfoRes) ProtoMessage() {}

func (x *RecordingInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingInfoRes.ProtoReflect.Descriptor instead.
func (*RecordingInfoRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{5}
}

func (x *RecordingInfoRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RecordingInfoRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RecordingInfoRes) GetRecordingInfo() *RecordingInfo {
	if x != nil {
		return x.RecordingInfo
	}
	return nil
}

func (x *RecordingInfoRes) GetRoomInfo() *PastRoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type DeleteRecordingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordingReq) Reset() {
	*x = DeleteRecordingReq{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordingReq) ProtoMessage() {}

func (x *DeleteRecordingReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordingReq.ProtoReflect.Descriptor instead.
func (*DeleteRecordingReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRecordingReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type DeleteRecordingRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordingRes) Reset() {
	*x = DeleteRecordingRes{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordingRes) ProtoMessage() {}

func (x *DeleteRecordingRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordingRes.ProtoReflect.Descriptor instead.
func (*DeleteRecordingRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRecordingRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DeleteRecordingRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetDownloadTokenReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadTokenReq) Reset() {
	*x = GetDownloadTokenReq{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadTokenReq) ProtoMessage() {}

func (x *GetDownloadTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadTokenReq.ProtoReflect.Descriptor instead.
func (*GetDownloadTokenReq) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{8}
}

func (x *GetDownloadTokenReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type GetDownloadTokenRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Token         *string                `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadTokenRes) Reset() {
	*x = GetDownloadTokenRes{}
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadTokenRes) ProtoMessage() {}

func (x *GetDownloadTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_plugnmeet_auth_recording_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadTokenRes.ProtoReflect.Descriptor instead.
func (*GetDownloadTokenRes) Descriptor() ([]byte, []int) {
	return file_plugnmeet_auth_recording_proto_rawDescGZIP(), []int{9}
}

func (x *GetDownloadTokenRes) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetDownloadTokenRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDownloadTokenRes) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

var File_plugnmeet_auth_recording_proto protoreflect.FileDescriptor

const file_plugnmeet_auth_recording_proto_rawDesc = "" +
	"\n" +
	"\x1eplugnmeet_auth_recording.proto\x12\tplugnmeet\x1a\x1bbuf/validate/validate.proto\x1a\x19plugnmeet_auth_room.proto\"t\n" +
	"\x12FetchRecordingsReq\x12\x19\n" +
	"\broom_ids\x18\x01 \x03(\tR\aroomIds\x12\x12\n" +
	"\x04from\x18\x02 \x01(\rR\x04from\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\xed\x01\n" +
	"\rRecordingInfo\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x19\n" +
	"\broom_sid\x18\x03 \x01(\tR\aroomSid\x12\x1b\n" +
	"\tfile_path\x18\x04 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_size\x18\x05 \x01(\x02R\bfileSize\x12#\n" +
	"\rcreation_time\x18\x06 \x01(\x03R\fcreationTime\x12,\n" +
	"\x12room_creation_time\x18\a \x01(\x03R\x10roomCreationTime\"\xca\x01\n" +
	"\x15FetchRecordingsResult\x12)\n" +
	"\x10total_recordings\x18\x01 \x01(\x03R\x0ftotalRecordings\x12\x12\n" +
	"\x04from\x18\x02 \x01(\rR\x04from\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\x12A\n" +
	"\x0frecordings_list\x18\x05 \x03(\v2\x18.plugnmeet.RecordingInfoR\x0erecordingsList\"x\n" +
	"\x12FetchRecordingsRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x128\n" +
	"\x06result\x18\x03 \x01(\v2 .plugnmeet.FetchRecordingsResultR\x06result\"7\n" +
	"\x10RecordingInfoReq\x12#\n" +
	"\trecord_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\brecordId\"\xb3\x01\n" +
	"\x10RecordingInfoRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12?\n" +
	"\x0erecording_info\x18\x03 \x01(\v2\x18.plugnmeet.RecordingInfoR\rrecordingInfo\x124\n" +
	"\troom_info\x18\x04 \x01(\v2\x17.plugnmeet.PastRoomInfoR\broomInfo\"9\n" +
	"\x12DeleteRecordingReq\x12#\n" +
	"\trecord_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\brecordId\">\n" +
	"\x12DeleteRecordingRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\":\n" +
	"\x13GetDownloadTokenReq\x12#\n" +
	"\trecord_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\brecordId\"d\n" +
	"\x13GetDownloadTokenRes\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x19\n" +
	"\x05token\x18\x03 \x01(\tH\x00R\x05token\x88\x01\x01B\b\n" +
	"\x06_tokenB\xa4\x01\n" +
	"\rcom.plugnmeetB\x1bPlugnmeetAuthRecordingProtoP\x01Z2github.com/mynaparrot/plugnmeet-protocol/plugnmeet\xa2\x02\x03PXX\xaa\x02\tPlugnmeet\xca\x02\tPlugnmeet\xe2\x02\x15Plugnmeet\\GPBMetadata\xea\x02\tPlugnmeetb\x06proto3"

var (
	file_plugnmeet_auth_recording_proto_rawDescOnce sync.Once
	file_plugnmeet_auth_recording_proto_rawDescData []byte
)

func file_plugnmeet_auth_recording_proto_rawDescGZIP() []byte {
	file_plugnmeet_auth_recording_proto_rawDescOnce.Do(func() {
		file_plugnmeet_auth_recording_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugnmeet_auth_recording_proto_rawDesc), len(file_plugnmeet_auth_recording_proto_rawDesc)))
	})
	return file_plugnmeet_auth_recording_proto_rawDescData
}

var file_plugnmeet_auth_recording_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_plugnmeet_auth_recording_proto_goTypes = []any{
	(*FetchRecordingsReq)(nil),    // 0: plugnmeet.FetchRecordingsReq
	(*RecordingInfo)(nil),         // 1: plugnmeet.RecordingInfo
	(*FetchRecordingsResult)(nil), // 2: plugnmeet.FetchRecordingsResult
	(*FetchRecordingsRes)(nil),    // 3: plugnmeet.FetchRecordingsRes
	(*RecordingInfoReq)(nil),      // 4: plugnmeet.RecordingInfoReq
	(*RecordingInfoRes)(nil),      // 5: plugnmeet.RecordingInfoRes
	(*DeleteRecordingReq)(nil),    // 6: plugnmeet.DeleteRecordingReq
	(*DeleteRecordingRes)(nil),    // 7: plugnmeet.DeleteRecordingRes
	(*GetDownloadTokenReq)(nil),   // 8: plugnmeet.GetDownloadTokenReq
	(*GetDownloadTokenRes)(nil),   // 9: plugnmeet.GetDownloadTokenRes
	(*PastRoomInfo)(nil),          // 10: plugnmeet.PastRoomInfo
}
var file_plugnmeet_auth_recording_proto_depIdxs = []int32{
	1,  // 0: plugnmeet.FetchRecordingsResult.recordings_list:type_name -> plugnmeet.RecordingInfo
	2,  // 1: plugnmeet.FetchRecordingsRes.result:type_name -> plugnmeet.FetchRecordingsResult
	1,  // 2: plugnmeet.RecordingInfoRes.recording_info:type_name -> plugnmeet.RecordingInfo
	10, // 3: plugnmeet.RecordingInfoRes.room_info:type_name -> plugnmeet.PastRoomInfo
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_plugnmeet_auth_recording_proto_init() }
func file_plugnmeet_auth_recording_proto_init() {
	if File_plugnmeet_auth_recording_proto != nil {
		return
	}
	file_plugnmeet_auth_room_proto_init()
	file_plugnmeet_auth_recording_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugnmeet_auth_recording_proto_rawDesc), len(file_plugnmeet_auth_recording_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugnmeet_auth_recording_proto_goTypes,
		DependencyIndexes: file_plugnmeet_auth_recording_proto_depIdxs,
		MessageInfos:      file_plugnmeet_auth_recording_proto_msgTypes,
	}.Build()
	File_plugnmeet_auth_recording_proto = out.File
	file_plugnmeet_auth_recording_proto_goTypes = nil
	file_plugnmeet_auth_recording_proto_depIdxs = nil
}
